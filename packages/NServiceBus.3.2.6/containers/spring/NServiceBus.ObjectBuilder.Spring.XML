<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NServiceBus.ObjectBuilder.Spring</name>
    </assembly>
    <members>
        <member name="M:NServiceBus.ObjectBuilder.Spring.ArbitraryFuncDelegatingFactoryObject`1.GetObject">
            <summary>
            Return an instance (possibly shared or independent) of the object
                        managed by this factory.
            </summary>
            <remarks>
            <note type="caution">If this method is being called in the context of an enclosing IoC container and
                        returns <see langword="null"/>, the IoC container will consider this factory
                        object as not being fully initialized and throw a corresponding (and most
                        probably fatal) exception.
                        </note>
            </remarks>
            <returns>
            An instance (possibly shared or independent) of the object managed by
                        this factory.
            </returns>
        </member>
        <member name="P:NServiceBus.ObjectBuilder.Spring.ArbitraryFuncDelegatingFactoryObject`1.ObjectType">
            <summary>
            Return the <see cref="T:System.Type"/> of object that this
                        <see cref="T:Spring.Objects.Factory.IFactoryObject"/> creates, or
                        <see langword="null"/> if not known in advance.
            </summary>
        </member>
        <member name="P:NServiceBus.ObjectBuilder.Spring.ArbitraryFuncDelegatingFactoryObject`1.IsSingleton">
            <summary>
            Is the object managed by this factory a singleton or a prototype?
            </summary>
        </member>
        <member name="T:NServiceBus.ConfigureSpringBuilder">
            <summary>
            Contains extension methods to NServiceBus.Configure for configuring the Spring container.
            </summary>
        </member>
        <member name="M:NServiceBus.ConfigureSpringBuilder.SpringFrameworkBuilder(NServiceBus.Configure)">
            <summary>
            Use the Spring Framework as the container.
            </summary>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:NServiceBus.ConfigureSpringBuilder.SpringFrameworkBuilder(NServiceBus.Configure,Spring.Context.Support.GenericApplicationContext)">
            <summary>
            Use the Spring Framework as the container with the inilialized application context
            </summary>
            <param name="config"></param>
            <param name="applicationContext"></param>
            <returns></returns>
        </member>
        <member name="T:NServiceBus.ObjectBuilder.Spring.SpringObjectBuilder">
            <summary>
            Implementation of IBuilderInternal using the Spring Framework container
            </summary>
        </member>
        <member name="M:NServiceBus.ObjectBuilder.Spring.SpringObjectBuilder.#ctor">
            <summary>
            Instantiates the builder using a new GenericApplicationContext.
            </summary>
        </member>
        <member name="M:NServiceBus.ObjectBuilder.Spring.SpringObjectBuilder.#ctor(Spring.Context.Support.GenericApplicationContext)">
            <summary>
            Instantiates the builder using the given container.
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:NServiceBus.ObjectBuilder.Spring.SpringObjectBuilder.Dispose">
            <summary>
            No resources to dispose.
            </summary>
        </member>
    </members>
</doc>
