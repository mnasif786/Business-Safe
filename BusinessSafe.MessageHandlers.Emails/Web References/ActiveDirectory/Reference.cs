//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18052.
// 
#pragma warning disable 1591

namespace BusinessSafe.MessageHandlers.Emails.ActiveDirectory {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WS_ActiveDirectorySoap", Namespace="http://WebServices_ActiveDirectory/")]
    public partial class WS_ActiveDirectory : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback IsAllowedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupsForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupsForDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetManagerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetManagerGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIPPhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActiveDirectoryUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateActiveDirectoryUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserNamesInGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserFromGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoesUserExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUsersByExtensionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUsersByMobileOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUsersByJobTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUsersByOfficeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUsersBySpeedDialOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUsersByDirectDialOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUsersByDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUsersByUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUsersByForenameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUsersBySurnameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUsersByAnyFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUsersOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WS_ActiveDirectory() {
            this.Url = global::BusinessSafe.MessageHandlers.Emails.Properties.Settings.Default.BusinessSafe_MessageHandlers_Emails_ActiveDirectory_WS_ActiveDirectory;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IsAllowedCompletedEventHandler IsAllowedCompleted;
        
        /// <remarks/>
        public event GetGroupsForUserCompletedEventHandler GetGroupsForUserCompleted;
        
        /// <remarks/>
        public event GetGroupsForDomainCompletedEventHandler GetGroupsForDomainCompleted;
        
        /// <remarks/>
        public event GetManagerCompletedEventHandler GetManagerCompleted;
        
        /// <remarks/>
        public event GetManagerGroupsCompletedEventHandler GetManagerGroupsCompleted;
        
        /// <remarks/>
        public event GetIPPhoneCompletedEventHandler GetIPPhoneCompleted;
        
        /// <remarks/>
        public event GetUserPropertiesCompletedEventHandler GetUserPropertiesCompleted;
        
        /// <remarks/>
        public event GetActiveDirectoryUserCompletedEventHandler GetActiveDirectoryUserCompleted;
        
        /// <remarks/>
        public event UpdateActiveDirectoryUserCompletedEventHandler UpdateActiveDirectoryUserCompleted;
        
        /// <remarks/>
        public event GetUserNamesInGroupCompletedEventHandler GetUserNamesInGroupCompleted;
        
        /// <remarks/>
        public event AddUserToGroupCompletedEventHandler AddUserToGroupCompleted;
        
        /// <remarks/>
        public event RemoveUserFromGroupCompletedEventHandler RemoveUserFromGroupCompleted;
        
        /// <remarks/>
        public event DoesUserExistCompletedEventHandler DoesUserExistCompleted;
        
        /// <remarks/>
        public event SearchUsersByExtensionCompletedEventHandler SearchUsersByExtensionCompleted;
        
        /// <remarks/>
        public event SearchUsersByMobileCompletedEventHandler SearchUsersByMobileCompleted;
        
        /// <remarks/>
        public event SearchUsersByJobTitleCompletedEventHandler SearchUsersByJobTitleCompleted;
        
        /// <remarks/>
        public event SearchUsersByOfficeCompletedEventHandler SearchUsersByOfficeCompleted;
        
        /// <remarks/>
        public event SearchUsersBySpeedDialCompletedEventHandler SearchUsersBySpeedDialCompleted;
        
        /// <remarks/>
        public event SearchUsersByDirectDialCompletedEventHandler SearchUsersByDirectDialCompleted;
        
        /// <remarks/>
        public event SearchUsersByDepartmentCompletedEventHandler SearchUsersByDepartmentCompleted;
        
        /// <remarks/>
        public event SearchUsersByUsernameCompletedEventHandler SearchUsersByUsernameCompleted;
        
        /// <remarks/>
        public event SearchUsersByForenameCompletedEventHandler SearchUsersByForenameCompleted;
        
        /// <remarks/>
        public event SearchUsersBySurnameCompletedEventHandler SearchUsersBySurnameCompleted;
        
        /// <remarks/>
        public event SearchUsersByAnyFieldCompletedEventHandler SearchUsersByAnyFieldCompleted;
        
        /// <remarks/>
        public event GetUserByUsernameCompletedEventHandler GetUserByUsernameCompleted;
        
        /// <remarks/>
        public event SearchUsersCompletedEventHandler SearchUsersCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/IsAllowed", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsAllowed(string Username, string GroupName, int Domain) {
            object[] results = this.Invoke("IsAllowed", new object[] {
                        Username,
                        GroupName,
                        Domain});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsAllowedAsync(string Username, string GroupName, int Domain) {
            this.IsAllowedAsync(Username, GroupName, Domain, null);
        }
        
        /// <remarks/>
        public void IsAllowedAsync(string Username, string GroupName, int Domain, object userState) {
            if ((this.IsAllowedOperationCompleted == null)) {
                this.IsAllowedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsAllowedOperationCompleted);
            }
            this.InvokeAsync("IsAllowed", new object[] {
                        Username,
                        GroupName,
                        Domain}, this.IsAllowedOperationCompleted, userState);
        }
        
        private void OnIsAllowedOperationCompleted(object arg) {
            if ((this.IsAllowedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsAllowedCompleted(this, new IsAllowedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/GetGroupsForUser", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetGroupsForUser(string Username, int Domain) {
            object[] results = this.Invoke("GetGroupsForUser", new object[] {
                        Username,
                        Domain});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupsForUserAsync(string Username, int Domain) {
            this.GetGroupsForUserAsync(Username, Domain, null);
        }
        
        /// <remarks/>
        public void GetGroupsForUserAsync(string Username, int Domain, object userState) {
            if ((this.GetGroupsForUserOperationCompleted == null)) {
                this.GetGroupsForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupsForUserOperationCompleted);
            }
            this.InvokeAsync("GetGroupsForUser", new object[] {
                        Username,
                        Domain}, this.GetGroupsForUserOperationCompleted, userState);
        }
        
        private void OnGetGroupsForUserOperationCompleted(object arg) {
            if ((this.GetGroupsForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupsForUserCompleted(this, new GetGroupsForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/GetGroupsForDomain", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveDirectoryGroup[] GetGroupsForDomain(int Domain) {
            object[] results = this.Invoke("GetGroupsForDomain", new object[] {
                        Domain});
            return ((ActiveDirectoryGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupsForDomainAsync(int Domain) {
            this.GetGroupsForDomainAsync(Domain, null);
        }
        
        /// <remarks/>
        public void GetGroupsForDomainAsync(int Domain, object userState) {
            if ((this.GetGroupsForDomainOperationCompleted == null)) {
                this.GetGroupsForDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupsForDomainOperationCompleted);
            }
            this.InvokeAsync("GetGroupsForDomain", new object[] {
                        Domain}, this.GetGroupsForDomainOperationCompleted, userState);
        }
        
        private void OnGetGroupsForDomainOperationCompleted(object arg) {
            if ((this.GetGroupsForDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupsForDomainCompleted(this, new GetGroupsForDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/GetManager", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetManager(string Username, int Domain) {
            object[] results = this.Invoke("GetManager", new object[] {
                        Username,
                        Domain});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetManagerAsync(string Username, int Domain) {
            this.GetManagerAsync(Username, Domain, null);
        }
        
        /// <remarks/>
        public void GetManagerAsync(string Username, int Domain, object userState) {
            if ((this.GetManagerOperationCompleted == null)) {
                this.GetManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetManagerOperationCompleted);
            }
            this.InvokeAsync("GetManager", new object[] {
                        Username,
                        Domain}, this.GetManagerOperationCompleted, userState);
        }
        
        private void OnGetManagerOperationCompleted(object arg) {
            if ((this.GetManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetManagerCompleted(this, new GetManagerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/GetManagerGroups", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveDirectoryGroup[] GetManagerGroups(string Username, int Domain) {
            object[] results = this.Invoke("GetManagerGroups", new object[] {
                        Username,
                        Domain});
            return ((ActiveDirectoryGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetManagerGroupsAsync(string Username, int Domain) {
            this.GetManagerGroupsAsync(Username, Domain, null);
        }
        
        /// <remarks/>
        public void GetManagerGroupsAsync(string Username, int Domain, object userState) {
            if ((this.GetManagerGroupsOperationCompleted == null)) {
                this.GetManagerGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetManagerGroupsOperationCompleted);
            }
            this.InvokeAsync("GetManagerGroups", new object[] {
                        Username,
                        Domain}, this.GetManagerGroupsOperationCompleted, userState);
        }
        
        private void OnGetManagerGroupsOperationCompleted(object arg) {
            if ((this.GetManagerGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetManagerGroupsCompleted(this, new GetManagerGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/GetIPPhone", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetIPPhone(string Username, int Domain) {
            object[] results = this.Invoke("GetIPPhone", new object[] {
                        Username,
                        Domain});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetIPPhoneAsync(string Username, int Domain) {
            this.GetIPPhoneAsync(Username, Domain, null);
        }
        
        /// <remarks/>
        public void GetIPPhoneAsync(string Username, int Domain, object userState) {
            if ((this.GetIPPhoneOperationCompleted == null)) {
                this.GetIPPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIPPhoneOperationCompleted);
            }
            this.InvokeAsync("GetIPPhone", new object[] {
                        Username,
                        Domain}, this.GetIPPhoneOperationCompleted, userState);
        }
        
        private void OnGetIPPhoneOperationCompleted(object arg) {
            if ((this.GetIPPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIPPhoneCompleted(this, new GetIPPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/GetUserProperties", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetUserProperties(string Username, int Domain) {
            object[] results = this.Invoke("GetUserProperties", new object[] {
                        Username,
                        Domain});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserPropertiesAsync(string Username, int Domain) {
            this.GetUserPropertiesAsync(Username, Domain, null);
        }
        
        /// <remarks/>
        public void GetUserPropertiesAsync(string Username, int Domain, object userState) {
            if ((this.GetUserPropertiesOperationCompleted == null)) {
                this.GetUserPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserPropertiesOperationCompleted);
            }
            this.InvokeAsync("GetUserProperties", new object[] {
                        Username,
                        Domain}, this.GetUserPropertiesOperationCompleted, userState);
        }
        
        private void OnGetUserPropertiesOperationCompleted(object arg) {
            if ((this.GetUserPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserPropertiesCompleted(this, new GetUserPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/GetActiveDirectoryUser", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveDirectoryUser GetActiveDirectoryUser(string Username, int Domain) {
            object[] results = this.Invoke("GetActiveDirectoryUser", new object[] {
                        Username,
                        Domain});
            return ((ActiveDirectoryUser)(results[0]));
        }
        
        /// <remarks/>
        public void GetActiveDirectoryUserAsync(string Username, int Domain) {
            this.GetActiveDirectoryUserAsync(Username, Domain, null);
        }
        
        /// <remarks/>
        public void GetActiveDirectoryUserAsync(string Username, int Domain, object userState) {
            if ((this.GetActiveDirectoryUserOperationCompleted == null)) {
                this.GetActiveDirectoryUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActiveDirectoryUserOperationCompleted);
            }
            this.InvokeAsync("GetActiveDirectoryUser", new object[] {
                        Username,
                        Domain}, this.GetActiveDirectoryUserOperationCompleted, userState);
        }
        
        private void OnGetActiveDirectoryUserOperationCompleted(object arg) {
            if ((this.GetActiveDirectoryUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActiveDirectoryUserCompleted(this, new GetActiveDirectoryUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/UpdateActiveDirectoryUser", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateActiveDirectoryUser(ActiveDirectoryUser activeDirectoryUser, int Domain) {
            object[] results = this.Invoke("UpdateActiveDirectoryUser", new object[] {
                        activeDirectoryUser,
                        Domain});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateActiveDirectoryUserAsync(ActiveDirectoryUser activeDirectoryUser, int Domain) {
            this.UpdateActiveDirectoryUserAsync(activeDirectoryUser, Domain, null);
        }
        
        /// <remarks/>
        public void UpdateActiveDirectoryUserAsync(ActiveDirectoryUser activeDirectoryUser, int Domain, object userState) {
            if ((this.UpdateActiveDirectoryUserOperationCompleted == null)) {
                this.UpdateActiveDirectoryUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateActiveDirectoryUserOperationCompleted);
            }
            this.InvokeAsync("UpdateActiveDirectoryUser", new object[] {
                        activeDirectoryUser,
                        Domain}, this.UpdateActiveDirectoryUserOperationCompleted, userState);
        }
        
        private void OnUpdateActiveDirectoryUserOperationCompleted(object arg) {
            if ((this.UpdateActiveDirectoryUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateActiveDirectoryUserCompleted(this, new UpdateActiveDirectoryUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/GetUserNamesInGroup", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetUserNamesInGroup(string ADGroupName, int Domain) {
            object[] results = this.Invoke("GetUserNamesInGroup", new object[] {
                        ADGroupName,
                        Domain});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserNamesInGroupAsync(string ADGroupName, int Domain) {
            this.GetUserNamesInGroupAsync(ADGroupName, Domain, null);
        }
        
        /// <remarks/>
        public void GetUserNamesInGroupAsync(string ADGroupName, int Domain, object userState) {
            if ((this.GetUserNamesInGroupOperationCompleted == null)) {
                this.GetUserNamesInGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserNamesInGroupOperationCompleted);
            }
            this.InvokeAsync("GetUserNamesInGroup", new object[] {
                        ADGroupName,
                        Domain}, this.GetUserNamesInGroupOperationCompleted, userState);
        }
        
        private void OnGetUserNamesInGroupOperationCompleted(object arg) {
            if ((this.GetUserNamesInGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserNamesInGroupCompleted(this, new GetUserNamesInGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/AddUserToGroup", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddUserToGroup(ActiveDirectoryUser activeDirectoryUser, int Domain, ActiveDirectoryGroup activeDirectoryGroup) {
            object[] results = this.Invoke("AddUserToGroup", new object[] {
                        activeDirectoryUser,
                        Domain,
                        activeDirectoryGroup});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserToGroupAsync(ActiveDirectoryUser activeDirectoryUser, int Domain, ActiveDirectoryGroup activeDirectoryGroup) {
            this.AddUserToGroupAsync(activeDirectoryUser, Domain, activeDirectoryGroup, null);
        }
        
        /// <remarks/>
        public void AddUserToGroupAsync(ActiveDirectoryUser activeDirectoryUser, int Domain, ActiveDirectoryGroup activeDirectoryGroup, object userState) {
            if ((this.AddUserToGroupOperationCompleted == null)) {
                this.AddUserToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserToGroupOperationCompleted);
            }
            this.InvokeAsync("AddUserToGroup", new object[] {
                        activeDirectoryUser,
                        Domain,
                        activeDirectoryGroup}, this.AddUserToGroupOperationCompleted, userState);
        }
        
        private void OnAddUserToGroupOperationCompleted(object arg) {
            if ((this.AddUserToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserToGroupCompleted(this, new AddUserToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/RemoveUserFromGroup", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveUserFromGroup(ActiveDirectoryUser activeDirectoryUser, int Domain, ActiveDirectoryGroup activeDirectoryGroup) {
            object[] results = this.Invoke("RemoveUserFromGroup", new object[] {
                        activeDirectoryUser,
                        Domain,
                        activeDirectoryGroup});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveUserFromGroupAsync(ActiveDirectoryUser activeDirectoryUser, int Domain, ActiveDirectoryGroup activeDirectoryGroup) {
            this.RemoveUserFromGroupAsync(activeDirectoryUser, Domain, activeDirectoryGroup, null);
        }
        
        /// <remarks/>
        public void RemoveUserFromGroupAsync(ActiveDirectoryUser activeDirectoryUser, int Domain, ActiveDirectoryGroup activeDirectoryGroup, object userState) {
            if ((this.RemoveUserFromGroupOperationCompleted == null)) {
                this.RemoveUserFromGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserFromGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveUserFromGroup", new object[] {
                        activeDirectoryUser,
                        Domain,
                        activeDirectoryGroup}, this.RemoveUserFromGroupOperationCompleted, userState);
        }
        
        private void OnRemoveUserFromGroupOperationCompleted(object arg) {
            if ((this.RemoveUserFromGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserFromGroupCompleted(this, new RemoveUserFromGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/DoesUserExist", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DoesUserExist(string Username, peninsulaDomains Domain) {
            object[] results = this.Invoke("DoesUserExist", new object[] {
                        Username,
                        Domain});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DoesUserExistAsync(string Username, peninsulaDomains Domain) {
            this.DoesUserExistAsync(Username, Domain, null);
        }
        
        /// <remarks/>
        public void DoesUserExistAsync(string Username, peninsulaDomains Domain, object userState) {
            if ((this.DoesUserExistOperationCompleted == null)) {
                this.DoesUserExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoesUserExistOperationCompleted);
            }
            this.InvokeAsync("DoesUserExist", new object[] {
                        Username,
                        Domain}, this.DoesUserExistOperationCompleted, userState);
        }
        
        private void OnDoesUserExistOperationCompleted(object arg) {
            if ((this.DoesUserExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoesUserExistCompleted(this, new DoesUserExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/SearchUsersByExtension", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveDirectoryUser[] SearchUsersByExtension(string searchTerm) {
            object[] results = this.Invoke("SearchUsersByExtension", new object[] {
                        searchTerm});
            return ((ActiveDirectoryUser[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchUsersByExtensionAsync(string searchTerm) {
            this.SearchUsersByExtensionAsync(searchTerm, null);
        }
        
        /// <remarks/>
        public void SearchUsersByExtensionAsync(string searchTerm, object userState) {
            if ((this.SearchUsersByExtensionOperationCompleted == null)) {
                this.SearchUsersByExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUsersByExtensionOperationCompleted);
            }
            this.InvokeAsync("SearchUsersByExtension", new object[] {
                        searchTerm}, this.SearchUsersByExtensionOperationCompleted, userState);
        }
        
        private void OnSearchUsersByExtensionOperationCompleted(object arg) {
            if ((this.SearchUsersByExtensionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUsersByExtensionCompleted(this, new SearchUsersByExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/SearchUsersByMobile", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveDirectoryUser[] SearchUsersByMobile(string searchTerm) {
            object[] results = this.Invoke("SearchUsersByMobile", new object[] {
                        searchTerm});
            return ((ActiveDirectoryUser[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchUsersByMobileAsync(string searchTerm) {
            this.SearchUsersByMobileAsync(searchTerm, null);
        }
        
        /// <remarks/>
        public void SearchUsersByMobileAsync(string searchTerm, object userState) {
            if ((this.SearchUsersByMobileOperationCompleted == null)) {
                this.SearchUsersByMobileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUsersByMobileOperationCompleted);
            }
            this.InvokeAsync("SearchUsersByMobile", new object[] {
                        searchTerm}, this.SearchUsersByMobileOperationCompleted, userState);
        }
        
        private void OnSearchUsersByMobileOperationCompleted(object arg) {
            if ((this.SearchUsersByMobileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUsersByMobileCompleted(this, new SearchUsersByMobileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/SearchUsersByJobTitle", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveDirectoryUser[] SearchUsersByJobTitle(string searchTerm) {
            object[] results = this.Invoke("SearchUsersByJobTitle", new object[] {
                        searchTerm});
            return ((ActiveDirectoryUser[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchUsersByJobTitleAsync(string searchTerm) {
            this.SearchUsersByJobTitleAsync(searchTerm, null);
        }
        
        /// <remarks/>
        public void SearchUsersByJobTitleAsync(string searchTerm, object userState) {
            if ((this.SearchUsersByJobTitleOperationCompleted == null)) {
                this.SearchUsersByJobTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUsersByJobTitleOperationCompleted);
            }
            this.InvokeAsync("SearchUsersByJobTitle", new object[] {
                        searchTerm}, this.SearchUsersByJobTitleOperationCompleted, userState);
        }
        
        private void OnSearchUsersByJobTitleOperationCompleted(object arg) {
            if ((this.SearchUsersByJobTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUsersByJobTitleCompleted(this, new SearchUsersByJobTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/SearchUsersByOffice", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveDirectoryUser[] SearchUsersByOffice(string searchTerm) {
            object[] results = this.Invoke("SearchUsersByOffice", new object[] {
                        searchTerm});
            return ((ActiveDirectoryUser[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchUsersByOfficeAsync(string searchTerm) {
            this.SearchUsersByOfficeAsync(searchTerm, null);
        }
        
        /// <remarks/>
        public void SearchUsersByOfficeAsync(string searchTerm, object userState) {
            if ((this.SearchUsersByOfficeOperationCompleted == null)) {
                this.SearchUsersByOfficeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUsersByOfficeOperationCompleted);
            }
            this.InvokeAsync("SearchUsersByOffice", new object[] {
                        searchTerm}, this.SearchUsersByOfficeOperationCompleted, userState);
        }
        
        private void OnSearchUsersByOfficeOperationCompleted(object arg) {
            if ((this.SearchUsersByOfficeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUsersByOfficeCompleted(this, new SearchUsersByOfficeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/SearchUsersBySpeedDial", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveDirectoryUser[] SearchUsersBySpeedDial(string searchTerm) {
            object[] results = this.Invoke("SearchUsersBySpeedDial", new object[] {
                        searchTerm});
            return ((ActiveDirectoryUser[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchUsersBySpeedDialAsync(string searchTerm) {
            this.SearchUsersBySpeedDialAsync(searchTerm, null);
        }
        
        /// <remarks/>
        public void SearchUsersBySpeedDialAsync(string searchTerm, object userState) {
            if ((this.SearchUsersBySpeedDialOperationCompleted == null)) {
                this.SearchUsersBySpeedDialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUsersBySpeedDialOperationCompleted);
            }
            this.InvokeAsync("SearchUsersBySpeedDial", new object[] {
                        searchTerm}, this.SearchUsersBySpeedDialOperationCompleted, userState);
        }
        
        private void OnSearchUsersBySpeedDialOperationCompleted(object arg) {
            if ((this.SearchUsersBySpeedDialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUsersBySpeedDialCompleted(this, new SearchUsersBySpeedDialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/SearchUsersByDirectDial", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveDirectoryUser[] SearchUsersByDirectDial(string searchTerm) {
            object[] results = this.Invoke("SearchUsersByDirectDial", new object[] {
                        searchTerm});
            return ((ActiveDirectoryUser[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchUsersByDirectDialAsync(string searchTerm) {
            this.SearchUsersByDirectDialAsync(searchTerm, null);
        }
        
        /// <remarks/>
        public void SearchUsersByDirectDialAsync(string searchTerm, object userState) {
            if ((this.SearchUsersByDirectDialOperationCompleted == null)) {
                this.SearchUsersByDirectDialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUsersByDirectDialOperationCompleted);
            }
            this.InvokeAsync("SearchUsersByDirectDial", new object[] {
                        searchTerm}, this.SearchUsersByDirectDialOperationCompleted, userState);
        }
        
        private void OnSearchUsersByDirectDialOperationCompleted(object arg) {
            if ((this.SearchUsersByDirectDialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUsersByDirectDialCompleted(this, new SearchUsersByDirectDialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/SearchUsersByDepartment", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveDirectoryUser[] SearchUsersByDepartment(string searchTerm) {
            object[] results = this.Invoke("SearchUsersByDepartment", new object[] {
                        searchTerm});
            return ((ActiveDirectoryUser[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchUsersByDepartmentAsync(string searchTerm) {
            this.SearchUsersByDepartmentAsync(searchTerm, null);
        }
        
        /// <remarks/>
        public void SearchUsersByDepartmentAsync(string searchTerm, object userState) {
            if ((this.SearchUsersByDepartmentOperationCompleted == null)) {
                this.SearchUsersByDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUsersByDepartmentOperationCompleted);
            }
            this.InvokeAsync("SearchUsersByDepartment", new object[] {
                        searchTerm}, this.SearchUsersByDepartmentOperationCompleted, userState);
        }
        
        private void OnSearchUsersByDepartmentOperationCompleted(object arg) {
            if ((this.SearchUsersByDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUsersByDepartmentCompleted(this, new SearchUsersByDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/SearchUsersByUsername", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveDirectoryUser[] SearchUsersByUsername(string searchTerm) {
            object[] results = this.Invoke("SearchUsersByUsername", new object[] {
                        searchTerm});
            return ((ActiveDirectoryUser[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchUsersByUsernameAsync(string searchTerm) {
            this.SearchUsersByUsernameAsync(searchTerm, null);
        }
        
        /// <remarks/>
        public void SearchUsersByUsernameAsync(string searchTerm, object userState) {
            if ((this.SearchUsersByUsernameOperationCompleted == null)) {
                this.SearchUsersByUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUsersByUsernameOperationCompleted);
            }
            this.InvokeAsync("SearchUsersByUsername", new object[] {
                        searchTerm}, this.SearchUsersByUsernameOperationCompleted, userState);
        }
        
        private void OnSearchUsersByUsernameOperationCompleted(object arg) {
            if ((this.SearchUsersByUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUsersByUsernameCompleted(this, new SearchUsersByUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/SearchUsersByForename", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveDirectoryUser[] SearchUsersByForename(string searchTerm) {
            object[] results = this.Invoke("SearchUsersByForename", new object[] {
                        searchTerm});
            return ((ActiveDirectoryUser[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchUsersByForenameAsync(string searchTerm) {
            this.SearchUsersByForenameAsync(searchTerm, null);
        }
        
        /// <remarks/>
        public void SearchUsersByForenameAsync(string searchTerm, object userState) {
            if ((this.SearchUsersByForenameOperationCompleted == null)) {
                this.SearchUsersByForenameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUsersByForenameOperationCompleted);
            }
            this.InvokeAsync("SearchUsersByForename", new object[] {
                        searchTerm}, this.SearchUsersByForenameOperationCompleted, userState);
        }
        
        private void OnSearchUsersByForenameOperationCompleted(object arg) {
            if ((this.SearchUsersByForenameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUsersByForenameCompleted(this, new SearchUsersByForenameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/SearchUsersBySurname", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveDirectoryUser[] SearchUsersBySurname(string searchTerm) {
            object[] results = this.Invoke("SearchUsersBySurname", new object[] {
                        searchTerm});
            return ((ActiveDirectoryUser[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchUsersBySurnameAsync(string searchTerm) {
            this.SearchUsersBySurnameAsync(searchTerm, null);
        }
        
        /// <remarks/>
        public void SearchUsersBySurnameAsync(string searchTerm, object userState) {
            if ((this.SearchUsersBySurnameOperationCompleted == null)) {
                this.SearchUsersBySurnameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUsersBySurnameOperationCompleted);
            }
            this.InvokeAsync("SearchUsersBySurname", new object[] {
                        searchTerm}, this.SearchUsersBySurnameOperationCompleted, userState);
        }
        
        private void OnSearchUsersBySurnameOperationCompleted(object arg) {
            if ((this.SearchUsersBySurnameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUsersBySurnameCompleted(this, new SearchUsersBySurnameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/SearchUsersByAnyField", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveDirectoryUser[] SearchUsersByAnyField(string searchTerm) {
            object[] results = this.Invoke("SearchUsersByAnyField", new object[] {
                        searchTerm});
            return ((ActiveDirectoryUser[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchUsersByAnyFieldAsync(string searchTerm) {
            this.SearchUsersByAnyFieldAsync(searchTerm, null);
        }
        
        /// <remarks/>
        public void SearchUsersByAnyFieldAsync(string searchTerm, object userState) {
            if ((this.SearchUsersByAnyFieldOperationCompleted == null)) {
                this.SearchUsersByAnyFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUsersByAnyFieldOperationCompleted);
            }
            this.InvokeAsync("SearchUsersByAnyField", new object[] {
                        searchTerm}, this.SearchUsersByAnyFieldOperationCompleted, userState);
        }
        
        private void OnSearchUsersByAnyFieldOperationCompleted(object arg) {
            if ((this.SearchUsersByAnyFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUsersByAnyFieldCompleted(this, new SearchUsersByAnyFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/GetUserByUsername", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveDirectoryUser GetUserByUsername(string Username) {
            object[] results = this.Invoke("GetUserByUsername", new object[] {
                        Username});
            return ((ActiveDirectoryUser)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByUsernameAsync(string Username) {
            this.GetUserByUsernameAsync(Username, null);
        }
        
        /// <remarks/>
        public void GetUserByUsernameAsync(string Username, object userState) {
            if ((this.GetUserByUsernameOperationCompleted == null)) {
                this.GetUserByUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByUsernameOperationCompleted);
            }
            this.InvokeAsync("GetUserByUsername", new object[] {
                        Username}, this.GetUserByUsernameOperationCompleted, userState);
        }
        
        private void OnGetUserByUsernameOperationCompleted(object arg) {
            if ((this.GetUserByUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByUsernameCompleted(this, new GetUserByUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WebServices_ActiveDirectory/SearchUsers", RequestNamespace="http://WebServices_ActiveDirectory/", ResponseNamespace="http://WebServices_ActiveDirectory/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveDirectoryUser[] SearchUsers(string[] searchFields, string[] searchTerms) {
            object[] results = this.Invoke("SearchUsers", new object[] {
                        searchFields,
                        searchTerms});
            return ((ActiveDirectoryUser[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchUsersAsync(string[] searchFields, string[] searchTerms) {
            this.SearchUsersAsync(searchFields, searchTerms, null);
        }
        
        /// <remarks/>
        public void SearchUsersAsync(string[] searchFields, string[] searchTerms, object userState) {
            if ((this.SearchUsersOperationCompleted == null)) {
                this.SearchUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUsersOperationCompleted);
            }
            this.InvokeAsync("SearchUsers", new object[] {
                        searchFields,
                        searchTerms}, this.SearchUsersOperationCompleted, userState);
        }
        
        private void OnSearchUsersOperationCompleted(object arg) {
            if ((this.SearchUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUsersCompleted(this, new SearchUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://WebServices_ActiveDirectory/")]
    public partial class ActiveDirectoryGroup {
        
        private string distinguishedNameField;
        
        private string nameField;
        
        private string samAccountNameField;
        
        /// <remarks/>
        public string DistinguishedName {
            get {
                return this.distinguishedNameField;
            }
            set {
                this.distinguishedNameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string SamAccountName {
            get {
                return this.samAccountNameField;
            }
            set {
                this.samAccountNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://WebServices_ActiveDirectory/")]
    public partial class ActiveDirectoryUser {
        
        private string distinguishedNameField;
        
        private string usernameField;
        
        private string forenameField;
        
        private string surnameField;
        
        private string displayNameField;
        
        private string jobTitleField;
        
        private string departmentField;
        
        private string officeField;
        
        private string mobileField;
        
        private string extensionField;
        
        private string speedDialField;
        
        private string faxNoField;
        
        private string directDialField;
        
        private string managerField;
        
        private string managerUsernameField;
        
        private string managerDistinguishedNameField;
        
        private string emailAddressField;
        
        private bool disabledField;
        
        private ActiveDirectoryGroup[] groupsField;
        
        /// <remarks/>
        public string DistinguishedName {
            get {
                return this.distinguishedNameField;
            }
            set {
                this.distinguishedNameField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Forename {
            get {
                return this.forenameField;
            }
            set {
                this.forenameField = value;
            }
        }
        
        /// <remarks/>
        public string Surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string JobTitle {
            get {
                return this.jobTitleField;
            }
            set {
                this.jobTitleField = value;
            }
        }
        
        /// <remarks/>
        public string Department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
            }
        }
        
        /// <remarks/>
        public string Office {
            get {
                return this.officeField;
            }
            set {
                this.officeField = value;
            }
        }
        
        /// <remarks/>
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        public string Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        public string SpeedDial {
            get {
                return this.speedDialField;
            }
            set {
                this.speedDialField = value;
            }
        }
        
        /// <remarks/>
        public string FaxNo {
            get {
                return this.faxNoField;
            }
            set {
                this.faxNoField = value;
            }
        }
        
        /// <remarks/>
        public string DirectDial {
            get {
                return this.directDialField;
            }
            set {
                this.directDialField = value;
            }
        }
        
        /// <remarks/>
        public string Manager {
            get {
                return this.managerField;
            }
            set {
                this.managerField = value;
            }
        }
        
        /// <remarks/>
        public string ManagerUsername {
            get {
                return this.managerUsernameField;
            }
            set {
                this.managerUsernameField = value;
            }
        }
        
        /// <remarks/>
        public string ManagerDistinguishedName {
            get {
                return this.managerDistinguishedNameField;
            }
            set {
                this.managerDistinguishedNameField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public bool Disabled {
            get {
                return this.disabledField;
            }
            set {
                this.disabledField = value;
            }
        }
        
        /// <remarks/>
        public ActiveDirectoryGroup[] Groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://WebServices_ActiveDirectory/")]
    public enum peninsulaDomains {
        
        /// <remarks/>
        DEFAULT,
        
        /// <remarks/>
        HQ,
        
        /// <remarks/>
        Hinckley,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsAllowedCompletedEventHandler(object sender, IsAllowedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsAllowedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsAllowedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGroupsForUserCompletedEventHandler(object sender, GetGroupsForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGroupsForDomainCompletedEventHandler(object sender, GetGroupsForDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupsForDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupsForDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveDirectoryGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveDirectoryGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetManagerCompletedEventHandler(object sender, GetManagerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetManagerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetManagerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetManagerGroupsCompletedEventHandler(object sender, GetManagerGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetManagerGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetManagerGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveDirectoryGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveDirectoryGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetIPPhoneCompletedEventHandler(object sender, GetIPPhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIPPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIPPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserPropertiesCompletedEventHandler(object sender, GetUserPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetActiveDirectoryUserCompletedEventHandler(object sender, GetActiveDirectoryUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActiveDirectoryUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActiveDirectoryUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveDirectoryUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveDirectoryUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateActiveDirectoryUserCompletedEventHandler(object sender, UpdateActiveDirectoryUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateActiveDirectoryUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateActiveDirectoryUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserNamesInGroupCompletedEventHandler(object sender, GetUserNamesInGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserNamesInGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserNamesInGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddUserToGroupCompletedEventHandler(object sender, AddUserToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemoveUserFromGroupCompletedEventHandler(object sender, RemoveUserFromGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveUserFromGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveUserFromGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DoesUserExistCompletedEventHandler(object sender, DoesUserExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoesUserExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoesUserExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchUsersByExtensionCompletedEventHandler(object sender, SearchUsersByExtensionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUsersByExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUsersByExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveDirectoryUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveDirectoryUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchUsersByMobileCompletedEventHandler(object sender, SearchUsersByMobileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUsersByMobileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUsersByMobileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveDirectoryUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveDirectoryUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchUsersByJobTitleCompletedEventHandler(object sender, SearchUsersByJobTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUsersByJobTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUsersByJobTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveDirectoryUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveDirectoryUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchUsersByOfficeCompletedEventHandler(object sender, SearchUsersByOfficeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUsersByOfficeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUsersByOfficeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveDirectoryUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveDirectoryUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchUsersBySpeedDialCompletedEventHandler(object sender, SearchUsersBySpeedDialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUsersBySpeedDialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUsersBySpeedDialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveDirectoryUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveDirectoryUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchUsersByDirectDialCompletedEventHandler(object sender, SearchUsersByDirectDialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUsersByDirectDialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUsersByDirectDialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveDirectoryUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveDirectoryUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchUsersByDepartmentCompletedEventHandler(object sender, SearchUsersByDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUsersByDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUsersByDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveDirectoryUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveDirectoryUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchUsersByUsernameCompletedEventHandler(object sender, SearchUsersByUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUsersByUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUsersByUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveDirectoryUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveDirectoryUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchUsersByForenameCompletedEventHandler(object sender, SearchUsersByForenameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUsersByForenameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUsersByForenameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveDirectoryUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveDirectoryUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchUsersBySurnameCompletedEventHandler(object sender, SearchUsersBySurnameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUsersBySurnameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUsersBySurnameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveDirectoryUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveDirectoryUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchUsersByAnyFieldCompletedEventHandler(object sender, SearchUsersByAnyFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUsersByAnyFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUsersByAnyFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveDirectoryUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveDirectoryUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserByUsernameCompletedEventHandler(object sender, GetUserByUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveDirectoryUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveDirectoryUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchUsersCompletedEventHandler(object sender, SearchUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveDirectoryUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveDirectoryUser[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591