@using BusinessSafe.WebSite.Areas.Company.ViewModels
@using BusinessSafe.WebSite.Areas.GeneralRiskAssessments.ViewModels
@using BusinessSafe.WebSite.Extensions
@model BusinessSafe.WebSite.Areas.HazardousSubstanceRiskAssessments.ViewModels.DescriptionViewModel
@using (Html.BeginForm("Save", "Description", FormMethod.Post, new { id = "add-edit-risk-assessment-description-form", @class="row form-inline"}))
{
    if (!ViewData.ModelState.IsValid)
    {
        @Html.Partial("_DistinctValidationSummary")
    }

    if (TempData["Notice"] != null)
    {
        <div class="span12">
    <div class="alert alert-success">
        <a id="successmessageanchor" href="#successmessage"></a>
        @TempData["Notice"].ToString()
    </div>  </div>
    }
    @Html.HiddenFor(model => model.RiskAssessmentId)
    @Html.HiddenFor(model => model.CompanyId)
        <fieldset>
            <legend id="legend-people-involvement" class="span12"><h3>People Involved in Assessment</h3></legend>
                    <div id="employeeContainer" class="span6">
                        @Html.Partial("_Employees", Model.Employees)
                    </div>
                    <div id="nonemployeeContainer" class="span6">
                        @Html.Partial("_NonEmployees", Model.NonEmployees)
                    </div>
        </fieldset>
        <fieldset>
            <legend class="span12"><h3>Details of Substance</h3></legend>
            @Html.Action("SubstanceDetailsForRiskAssessment", "Inventory", new { area = "HazardousSubstanceInventory", id = Model.HazardousSubstanceId })
                
            <div class="span12">
                <label class="span2" for="WorkspaceExposureLimits">Workplace Exposure Limit (WEL) where applicable</label>
                @Html.TextBoxFor(x => x.WorkspaceExposureLimits, new { id = "WorkspaceExposureLimits", @class = "span3" })
            </div>
            <div class="span12">
                <label class="span2">Route of Entry into Body:</label>
                <div id="route-of-entry" class="span9">
                    <ul>
                        <li>@Html.CheckBoxFor(x => x.IsInhalationRouteOfEntry) <label for="IsInhalationRouteOfEntry">Inhalation (breathing in)</label></li>
                        <li>@Html.CheckBoxFor(x => x.IsIngestionRouteOfEntry) <label for="IsIngestionRouteOfEntry">Ingestion (swallowing)</label></li>
                        <li>@Html.CheckBoxFor(x => x.IsAbsorptionRouteOfEntry) <label for="IsAbsorptionRouteOfEntry">Absorption (through skin)</label></li>
                    </ul>
                </div>
            </div>
        </fieldset>
        <div class="span12">
                <label class="span2"></label>
                @if (Model.IsSaveButtonEnabled(User))
                {
                    var viewName = Html.IsReadOnly() ? "View" : "Index";
                    var urlAction = Url.Action(viewName, "Assessment", new { area = "HazardousSubstanceRiskAssessments", companyId = Model.CompanyId, riskAssessmentId = Model.RiskAssessmentId });
           
                    <input type="submit" id="saveButton" value="Save" class="btn btn-success" />
                    <a id="nextBtn" class="btn btn-primary" tabIndex="2" href="@urlAction">Save &amp; Continue <i class="icon-chevron-right icon-white"></i></a>
                }
                <a class="btn btn-link" href="@Url.Action("Index", "RiskAssessment", new { area = "HazardousSubstanceRiskAssessments", companyId = @Html.GetUsersCompanyId(User) })">Cancel</a>
        </div>
}
<div class="hide">
@Html.Partial("_AddNonEmployee", new NonEmployeeViewModel(new PremisesInformationViewModel()))
</div>