@using BusinessSafe.WebSite.AuthenticationService
@using BusinessSafe.WebSite.Extensions
@using Telerik.Web.Mvc.UI
@model BusinessSafe.WebSite.Areas.Responsibilities.ViewModels.ResponsibilitiesIndexViewModel

@Html.Partial("_SearchResultsGridTiteBar", Model)

@Html.Telerik().Grid(Model.Responsibilities).Name("ResponsibilitiesGrid").PrefixUrlParameters(false).EnableCustomBinding(true).DataKeys(keys => keys.Add(c => c.Id)).DataBinding(dataBinding =>
    dataBinding.Server().Select("Index", "Responsibility")).Columns(
    columns =>
    {
        columns.Bound(o => o.Id).Visible(false);
        columns.Bound(o => o.Category).Width("8%");
        columns.Bound(o => o.Title).Width("10%");
        columns.Bound(o => o.Description).Width("15%");
        columns.Bound(o => o.Site).Width("10%");
        columns.Bound(o => o.Reason).Width("6%");
        columns.Bound(o => o.AssignedTo).Title("Responsibility Owner").Width("12%");
        columns.Bound(o => o.Status).Width("6%");
        columns.Bound(o => o.CreatedDateFormatted).Title("Created Date").Width("7%");
        columns.Bound(o => o.Frequency).Title("Frequency").Width("7%");
        columns.Bound(o => o.DueDateFormatted).Title("Completion Due Date").Width("8%");
        columns.Template(@<text>
            @if (!item.IsDeleted)
            {
                if (User.IsInRole(Permissions.ViewResponsibilities.ToString()))
                {
                    <a data-id="@item.Id"href="@Url.Action("View", "Responsibility", new { responsibilityId = item.Id, companyId = @Html.GetUsersCompanyId(User) })" title="View Responsibility">
                        <i class="icon-search"></i>
                    </a>
                }
                if (User.IsInRole(Permissions.EditResponsibilities.ToString()))
                {
                    <a data-id="@item.Id" class="icon-edit" href="@Url.Action("Edit", "Responsibility", new { responsibilityId = item.Id, companyId = @Html.GetUsersCompanyId(User) })" title="Edit Responsibility">
                        <i class="icon-edit"></i>
                    </a>
                }

                if (User.IsInRole(Permissions.ViewAccidentRecords.ToString()))
                {
                    <a  data-id="@item.Id" class="icon-print" href="@Url.Action("Index", "Responsibilities", new { area = "SqlReports", responsibilityId = item.Id })" title="Print Responsibilities">
                        <i class="icon-print"></i>                        
                    </a>
                }                 
                 
                if (User.IsInRole(Permissions.DeleteResponsibilities.ToString()))
                {
                <a class="icon-remove" data-id="@item.Id" href="" title="Delete Responsibility"></a>
                }

                if (User.IsInRole(Permissions.AddResponsibilities.ToString()))
                {
                    @*<a class="copy-risk-assessment-link icon-repeat" data-id="@item.Id" data-url="" href="#" title="Copy Risk Assessment">
                        <i class="icon-repeat"></i></a>*@
                
                    <a class="icon-repeat" data-id="@item.Id" href="" title="Copy Responsibility"></a>
                }
            }
            else
            {
                <a class="reinstate icon-share" data-id="@item.Id" href="" title="Re-instate Responsibility"></a>
                
            @*    <a data-id="@item.Id" href="#" title="View Risk Assessment">
                    <i class="icon-search"></i></a>*@
                
            }
            </text>).Width("7%");
    }).Pageable(page => {   page.PageSize(Model.PageSize);
                            page.Total(Model.Total); }).Sortable()