@using BusinessSafe.WebSite.AuthenticationService
@using BusinessSafe.WebSite.Extensions
@using BusinessSafe.WebSite.Areas.Responsibilities.ViewModels
@using Cassette.Views
@model ResponsibilityViewModel
@{
    ViewBag.Title = "Responsibilities";
}
<div class="container fixed-content ipad-container">
    <h2>
        <a class="btn" href="@Url.Action("Index", "Responsibility", new { area = "Responsibilities" })" title="Close Responsibility"><i class="icon-remove"></i></a>
        @if(ViewBag.IsReadOnly != null && ViewBag.IsReadOnly && User.IsInRole(Permissions.EditResponsibilities.ToString()))
        {
            <a class="btn" href="@Url.Action("Edit", "Responsibility", new {responsibilityId = Model.ResponsibilityId, companyId = Model.CompanyId})" title="Edit Responsibility"><i class="icon-edit"></i></a>    
        }
        <i class="tick"></i>@(ViewBag.IsReadOnly == null || !ViewBag.IsReadOnly ? "Edit Responsibility" : "View Responsibility")
    </h2>
    @Html.Partial("_ResponsibilityDetail", Model)
</div>
@if (ViewBag.IsReadOnly != null)
{
    <input type="hidden" id="IsReadOnly" />
}

    

@section JavaScriptSection
{
    @{
        Bundles.Reference("responsibilities");
    }
    <script type="text/javascript">
        $(document).ready(function() {
            var sites = @Html.Raw(Json.Encode(Model.Sites));
            var employees = @Html.Raw((Json.Encode(Model.Employees)));
            var frequencyOptions = @Html.Raw((Json.Encode(Model.FrequencyOptions)));
            var categories = @Html.Raw((Json.Encode(Model.Categories)));
            var reasons = @Html.Raw((Json.Encode(Model.Reasons)));
           responsibilities.initialise(sites,employees,frequencyOptions, categories, reasons);
        });
    </script>
}