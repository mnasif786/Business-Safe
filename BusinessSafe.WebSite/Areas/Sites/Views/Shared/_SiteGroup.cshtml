@model BusinessSafe.WebSite.Areas.Sites.ViewModels.SiteGroupDetailsViewModel
@using System.Web.Mvc.Html
@using BusinessSafe.WebSite.Areas.Sites.Controllers
@using (Html.BeginForm((Model.GroupId == 0 ? "CreateGroup" : "UpdateGroup"), "SiteGroup", FormMethod.Post, new { id = "SiteGroup", @class = "form-inline" }))
{
    @Html.HiddenFor(m => m.GroupId)
    @Html.HiddenFor(m => m.ClientId)
    @Html.HiddenFor(m => m.OriginalLinkId)
    <div class="row">
        <div id="groupdetailsinputfields">
            <fieldset>
                <div class="page-header">
                    <h1>@Html.DisplayFor(m => m.SectionTitle)</h1>
                </div>
                <div class="span6">
                    <label for="SiteName" class="span2">
                        Site Name</label>
                    @Html.TextBoxFor(m => m.Name)
                </div>
                <div class="span6">
                    <label for="LinkedToExistingSite" class="span2">
                        Linked To Existing Site</label>
                        @Html.TextBox("GroupLinkToSite", "", new { @class = "site-group-details-link-to-site" })
                        @Html.Hidden("GroupLinkToSiteId", Model.GroupLinkToSiteId)
                </div>
                <div class="span6">
                    <label for="LinkedToExistingGroup" class="span2">
                        Linked To Existing Groups</label>
                        @Html.TextBox("GroupLinkToGroup", "", new { @class = "site-group-details-link-to-site-group" })
                        @Html.Hidden("GroupLinkToGroupId", Model.GroupLinkToGroupId)
                </div>
            </fieldset>
        </div>
        @if (TempData[SitesController.MessageKey] != null)
        {
            <div class="alert alert-success">
                @TempData["Message"].ToString()
            </div>    
        }
        <div class="span6">
            @if (!ViewData.ModelState.IsValid)
            {
                @Html.Partial("_DistinctValidationSummary")
            }
            <label class="span2">
            </label>
            @if (Model.IsSaveButtonEnabled(User))
            {
                <button id="SaveSiteGroupButton" type="submit" value="Save" class="btn btn-success">
                    Save</button>
                @Html.ActionLink("Cancel", "Index", new { controller = "SitesStructure", area = "Sites" }, new { @class = "btn-cancel btn-link" }) 
                
            }
            @if (Model.IsDeleteButtonEnabled(User))
            {
                <button type="submit" id="deleteSiteBtn" value="Delete" class="btn btn-large btn-danger">
                    Delete</button>    
            }
        </div>
    </div>
}
<div class="hide">
    <div id="dialogDeleteSiteGroup" title="Delete Site Group">
        <p>
            Are you sure you want to delete this site group?</p>
    </div>
</div>
<script type="text/javascript">
    window.siteDetails = { 
        sites : @Html.Raw(Json.Encode(Model.ExistingSites)),
        siteGroups : @Html.Raw(Json.Encode(Model.ExistingGroups))    
    };
</script>