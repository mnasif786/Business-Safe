@using BusinessSafe.WebSite.Areas.FireRiskAssessments.ViewModels
@using BusinessSafe.WebSite.Extensions
@model PremisesInformationViewModel
<div id="PremisesInformationTabContentHolder" class="fixed-content">
    @Html.Partial("_TitleBar", ViewBag.RiskAssessmentSummary as FireRiskAssessmentSummaryViewModel)
    <form class="row form-inline" method="post" action="@Url.Action("Save", "PremisesInformation")" >
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="span12">
            @Html.Partial("_DistinctValidationSummary")
        </div>
        
    }
    @if (TempData["Notice"] != null)
    {
        <div class="alert alert-success">
            <a id="successmessageanchor" href="#successmessage"></a>
            @TempData["Notice"].ToString()
        </div>    
    }
    @Html.HiddenFor(model => model.RiskAssessmentId)
    @Html.HiddenFor(model => model.CompanyId)
    <fieldset>
        <div class="span12">
            <label class="span10">
                <b>Before commencing your Fire Risk Assessment, please answer the following question:
                </b>
            </label>
        </div>
        <div class="span12">
            @Html.HiddenFor(model => model.PremisesProvidesSleepingAccommodationConfirmed)
            <label class="span6" for="SelectedSiteId">
                Does the building you are about to assess provide sleeping accommodation?
            </label>
            @Html.RadioButtonFor(model => model.PremisesProvidesSleepingAccommodation, "true", new { id = "PremisesProvidesSleepingAccommodationTrue" })
            <label for="BuildingProvidesSleepingAccomodationTrue">
                Yes</label>
            &nbsp; &nbsp;
            @Html.RadioButtonFor(model => model.PremisesProvidesSleepingAccommodation, "false", new { id = "PremisesProvidesSleepingAccommodationFalse" })
            <label for="BuildingProvidesSleepingAccomodationFalse">
                No</label>
        </div>
    </fieldset>
    <fieldset>
        <legend class="span12">
            <h3>
                Details of Premises</h3>
        </legend>
        <div class="span12">
            <label class="span2" for="Location">
                Location</label>
            @Html.TextBoxFor(model => model.Location, new { @class = "span4", maxlength = "250" })
        </div>
       <div class="span12">
            <label class="span2" for="BuildingUse">
                Building Use</label>
            @Html.TextBoxFor(model => model.BuildingUse, new { @class = "span4", maxlength = "500" })
        </div>
        <div class="span12">
            <label class="span2 offset1" for="NumberOfFloors">
                Number of Floors</label>
            @Html.TextBoxFor(model => model.NumberOfFloors, new { @class = "span1" })
            <label class="offset1" style="margin-left: 2em;" for="NumberOfFloors">
                Number of People</label>
            @Html.TextBoxFor(model => model.NumberOfPeople, new { @class = "span1" })
        </div>
    </fieldset>
    <fieldset>
        <legend class="span12">
            <h3>
                Location of Emergency Shut Offs</h3>
        </legend>
        <div class="span12">
            <label class="span2" for="GasShutOff">
                Gas</label>
            @Html.TextBoxFor(m => m.GasEmergencyShutOff, new { @class = "span4", maxlength = "500" })
            
        </div>
        <div class="span12">
            <label class="span2" for="ElectricityShutOff">
                Electricity</label>
            @Html.TextBoxFor(model => model.ElectricityEmergencyShutOff, new { @class = "span4", maxlength = "500" })
        </div>
        <div class="span12">
            <label class="span2" for="WaterShutOff">
                Water</label>
            @Html.TextBoxFor(model => model.WaterEmergencyShutOff, new { @class = "span4", maxlength = "500" })
        </div>
        <div class="span12">
            <label class="span2" for="OtherShutOff">
                Other</label>
            @Html.TextBoxFor(model => model.OtherEmergencyShutOff, new { @class = "span4", maxlength = "500" })
        </div>
    </fieldset>
    @{
        var viewName = Html.IsReadOnly() ? "View" : "Index";
        var urlAction = Url.Action(viewName, "Hazards", new { area = "FireRiskAssessments", companyId = Model.CompanyId, riskAssessmentId = Model.RiskAssessmentId });
    }
    <div class="span12">
        <label class="span2">
        </label>
        @if (Model.IsSaveButtonEnabled)
        {
            <input type="submit" id="saveButton" value="Save" class="btn btn-success" />
            <a id="nextBtn" class="btn btn-primary"mainUrl="Hazards" tabIndex="2" href="@urlAction">
                Save &amp; Continue <i class="icon-chevron-right icon-white"></i></a>
            <a class="btn btn-link" href="@Url.Action("Index", "RiskAssessment", new { area = "FireRiskAssessments", companyId = @Html.GetUsersCompanyId(User) })">
                Cancel</a>
        }
    </div>
    </form>
</div>
