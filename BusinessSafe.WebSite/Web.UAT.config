<?xml version="1.0"?>

<!-- For more information on using web.config transformation visit http://go.microsoft.com/fwlink/?LinkId=125889 -->

<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
  <!--
    In the example below, the "SetAttributes" transform will change the value of 
    "connectionString" to use "ReleaseSQLServer" only when the "Match" locator 
    finds an atrribute "name" that has a value of "MyDB".
    
    <connectionStrings>
      <add name="MyDB" 
        connectionString="Data Source=ReleaseSQLServer;Initial Catalog=MyReleaseDB;Integrated Security=True" 
        xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>
    </connectionStrings>
  -->
  <DBSubscriptionStorageConfig UpdateSchema="true">
    <NHibernateProperties>
      <add Key="connection.connection_string" Value="Initial Catalog=NServiceBus;Data Source=UATSQL2\uat;UID=intranetadmin;PWD=intadpas;Connect Timeout=20;" xdt:Transform="Replace" xdt:Locator="Match(Key)"/>
	</NHibernateProperties>
  </DBSubscriptionStorageConfig>

  <UnicastBusConfig>
    <MessageEndpointMappings>
      <add Messages="BusinessSafe.Messages.Emails" Endpoint="businesssafe.messagehandlers.emails@UATBSO1" xdt:Transform="Replace" xdt:Locator="Match(Messages)"/>
      <add Messages="BusinessSafe.Messages" Endpoint="businesssafe.messagehandlers@UATBSO1" xdt:Transform="Replace" xdt:Locator="Match(Messages)" />
      <add Messages="Peninsula.Online.Messages" Endpoint="peninsula.online.messagehandlers@UATBSO1"  xdt:Transform="Replace" xdt:Locator="Match(Messages)" />
    </MessageEndpointMappings>
  </UnicastBusConfig>
  
  <appSettings>
    <add key="config_file" value="UAT" xdt:Transform="Replace" xdt:Locator="Match(key)" />
    <add key="DocumentTypeService" value="BusinessSafe.WebSite.WebsiteMoqs.FakeDocumentTypeService" xdt:Transform="Remove" xdt:Locator="Match(key)" />
    <add key="DocumentSubTypeService" value="BusinessSafe.WebSite.WebsiteMoqs.FakeDocumentSubTypeService" xdt:Transform="Remove" xdt:Locator="Match(key)" />
    <add key="ClientDocumentServiceType" value="BusinessSafe.WebSite.WebsiteMoqs.FakeClientDocumentService" xdt:Transform="Remove" xdt:Locator="Match(key)" />
    <add key="StreamingClientDocumentService" value="BusinessSafe.WebSite.WebsiteMoqs.FakeStreamingClientDocumentService" xdt:Transform="Remove" xdt:Locator="Match(key)" />
    <add key ="SQLReportsSuffix" value="_UAT" xdt:Transform="Replace" xdt:Locator="Match(key)" />
    <add key ="SqlReportsService" xdt:Transform="Remove" xdt:Locator="Match(key)" />
    <add key ="FeatureSwitch_FireRiskAssessments" value="true" xdt:Transform="Replace" xdt:Locator="Match(key)" />
    <add key="ClientDetailsServices.Rest.BaseUrl" value="http://uatbso1:8072/restservice/v1.0/" xdt:Transform="Replace" xdt:Locator="Match(key)" />
  </appSettings>
  <system.web>
    <compilation xdt:Transform="RemoveAttributes(debug)" />
    <!--
      In the example below, the "Replace" transform will replace the entire 
      <customErrors> section of your web.config file.
      Note that because there is only one customErrors section under the 
      <system.web> node, there is no need to use the "xdt:Locator" attribute.
      
      <customErrors defaultRedirect="GenericError.htm"
        mode="RemoteOnly" xdt:Transform="Replace">
        <error statusCode="500" redirect="InternalError.htm"/>
      </customErrors>
    -->
    
    <authentication mode="Forms" xdt:Transform="Replace" xdt:Locator="Match(mode)">
		<forms name="PeninsulaOnline" loginUrl="http://login.peninsula-uk.local/SignIn/Index" timeout="2880" slidingExpiration="true" domain="peninsula-uk.local" xdt:Transform="Replace" xdt:Locator="Match(timeout)" />
    </authentication>
    
    
  </system.web>
  <system.serviceModel>
    <client>
         <endpoint address="http://UATBSO1:8073/NewRegistrationRequestService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Default" contract="PeninsulaOnline.INewRegistrationRequestService" name="BasicHttpBinding_INewRegistrationRequestService" xdt:Transform="Replace" xdt:Locator="Match(name)"  />
    </client>
  </system.serviceModel>
  <elmah xdt:Transform="Insert">
    <security allowRemoteAccess="1" />
    <errorLog type="Elmah.SqlErrorLog, Elmah" applicationName="BusinessSafe" connectionString="Initial Catalog=ELMAH;Data Source=PBSITSQL\it_database;UID=intranetadmin;PWD=intadpas;Min Pool Size=2;Max Pool Size=60;Connect Timeout=2;"/>
  </elmah>
</configuration>