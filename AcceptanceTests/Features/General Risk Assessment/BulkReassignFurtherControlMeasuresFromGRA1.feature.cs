// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.239
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BusinessSafe.AcceptanceTests.Features.GeneralRiskAssessment
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Bulk Reassigning Further Action Tasks From GRA")]
    [NUnit.Framework.CategoryAttribute("BulkReassigningFurtherActionTasks")]
    public partial class BulkReassigningFurtherActionTasksFromGRAFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "BulkReassignFurtherControlMeasuresFromGRA.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Bulk Reassigning Further Action Tasks From GRA", "In order to reassign several further action tasks at a time\r\nAs a business safe o" +
                    "nline user with the correct user access rights\r\nI want to be able to reassign se" +
                    "veral further action tasks to a given user", ProgrammingLanguage.CSharp, new string[] {
                        "BulkReassigningFurtherActionTasks"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line 8
 testRunner.Given("I have logged in as company with id \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "MultiHazardRiskAssessmentHazardId",
                        "Title",
                        "Description",
                        "Reference",
                        "Deleted",
                        "CreatedOn",
                        "CreatedBy",
                        "TaskAssignedToId",
                        "TaskCompletionDueDate",
                        "TaskStatusId",
                        "TaskCompletedDate",
                        "TaskCompletedComments",
                        "TaskCategoryId",
                        "TaskReoccurringTypeId",
                        "TaskReoccurringEndDate",
                        "Discriminator",
                        "TaskGuid",
                        "SendTaskNotification",
                        "SendTaskCompletedNotification",
                        "SendTaskOverdueNotification"});
            table1.AddRow(new string[] {
                        "29",
                        "Test FCM 1",
                        "Description 1",
                        "Bulk_Reassign_FCM01",
                        "0",
                        "2012-09-13 13:25:28.000",
                        "16ac58fb-4ea4-4482-ac3d-000d607af67c",
                        "a433e9b2-84f6-4ad7-a89c-050e914dff01",
                        "2012-09-19 00:00:00.000",
                        "0",
                        "NULL",
                        "NULL",
                        "3",
                        "2",
                        "2012-12-25 00:00:00.000",
                        "MultiHazardRiskAssessmentFurtherControlMeasureTask",
                        "641cad05-b901-4d72-9904-34513e3ac671",
                        "0",
                        "1",
                        "1"});
            table1.AddRow(new string[] {
                        "29",
                        "Test FCM 2",
                        "Description 2",
                        "Bulk_Reassign_FCM02",
                        "0",
                        "2012-09-13 13:25:28.000",
                        "16ac58fb-4ea4-4482-ac3d-000d607af67c",
                        "a433e9b2-84f6-4ad7-a89c-050e914dff01",
                        "2012-09-19 00:00:00.000",
                        "0",
                        "NULL",
                        "NULL",
                        "3",
                        "2",
                        "2012-12-25 00:00:00.000",
                        "MultiHazardRiskAssessmentFurtherControlMeasureTask",
                        "eb17f6a0-1dda-4e5f-a059-b983ae1f3b9e",
                        "0",
                        "1",
                        "1"});
            table1.AddRow(new string[] {
                        "29",
                        "Test FCM 3",
                        "Description 3",
                        "Bulk_Reassign_FCM03",
                        "0",
                        "2012-09-13 13:25:28.000",
                        "16ac58fb-4ea4-4482-ac3d-000d607af67c",
                        "9D24AE1A-6645-45FC-9D50-8FC70BABEB89",
                        "2012-09-19 00:00:00.000",
                        "0",
                        "NULL",
                        "NULL",
                        "3",
                        "2",
                        "2012-12-25 00:00:00.000",
                        "MultiHazardRiskAssessmentFurtherControlMeasureTask",
                        "a4a26912-a1b2-4013-9be1-39ba8cfbf28a",
                        "0",
                        "1",
                        "1"});
            table1.AddRow(new string[] {
                        "29",
                        "Test FCM 4",
                        "Description 4",
                        "Bulk_Reassign_FCM04",
                        "0",
                        "2012-09-13 13:25:28.000",
                        "16ac58fb-4ea4-4482-ac3d-000d607af67c",
                        "9D24AE1A-6645-45FC-9D50-8FC70BABEB89",
                        "2012-09-19 00:00:00.000",
                        "0",
                        "NULL",
                        "NULL",
                        "3",
                        "2",
                        "2012-12-25 00:00:00.000",
                        "MultiHazardRiskAssessmentFurtherControlMeasureTask",
                        "92b77d25-d4bc-448b-8c43-4c18b2761945",
                        "0",
                        "1",
                        "1"});
            table1.AddRow(new string[] {
                        "29",
                        "Test FCM 5",
                        "Description 5",
                        "Bulk_Reassign_FCM05",
                        "0",
                        "2012-09-13 13:25:28.000",
                        "16ac58fb-4ea4-4482-ac3d-000d607af67c",
                        "9D24AE1A-6645-45FC-9D50-8FC70BABEB89",
                        "2012-09-19 00:00:00.000",
                        "0",
                        "NULL",
                        "NULL",
                        "3",
                        "2",
                        "2012-12-25 00:00:00.000",
                        "MultiHazardRiskAssessmentFurtherControlMeasureTask",
                        "0bd18845-5dea-4707-9986-c537da762ec6",
                        "0",
                        "1",
                        "1"});
            table1.AddRow(new string[] {
                        "29",
                        "Test FCM 6",
                        "Description 6",
                        "Bulk_Reassign_FCM06",
                        "0",
                        "2012-09-13 13:25:28.000",
                        "16ac58fb-4ea4-4482-ac3d-000d607af67c",
                        "9D24AE1A-6645-45FC-9D50-8FC70BABEB89",
                        "2012-09-19 00:00:00.000",
                        "0",
                        "NULL",
                        "NULL",
                        "3",
                        "2",
                        "2012-12-25 00:00:00.000",
                        "MultiHazardRiskAssessmentFurtherControlMeasureTask",
                        "3c2d9060-67ae-4adf-b58b-1f07910f9e5b",
                        "0",
                        "1",
                        "1"});
            table1.AddRow(new string[] {
                        "29",
                        "Test FCM 7",
                        "Description 7",
                        "Bulk_Reassign_FCM07",
                        "0",
                        "2012-09-13 13:25:28.000",
                        "16ac58fb-4ea4-4482-ac3d-000d607af67c",
                        "9D24AE1A-6645-45FC-9D50-8FC70BABEB89",
                        "2012-09-19 00:00:00.000",
                        "0",
                        "NULL",
                        "NULL",
                        "3",
                        "2",
                        "2012-12-25 00:00:00.000",
                        "MultiHazardRiskAssessmentFurtherControlMeasureTask",
                        "f9ed4fbd-fcfb-4a10-995b-eff36320906a",
                        "0",
                        "1",
                        "1"});
            table1.AddRow(new string[] {
                        "29",
                        "Test FCM 8",
                        "Description 8",
                        "Bulk_Reassign_FCM08",
                        "0",
                        "2012-09-13 13:25:28.000",
                        "16ac58fb-4ea4-4482-ac3d-000d607af67c",
                        "9D24AE1A-6645-45FC-9D50-8FC70BABEB89",
                        "2012-09-19 00:00:00.000",
                        "1",
                        "NULL",
                        "NULL",
                        "3",
                        "2",
                        "2012-12-25 00:00:00.000",
                        "MultiHazardRiskAssessmentFurtherControlMeasureTask",
                        "db46d056-0cb7-402b-ae92-2494ed59d2d8",
                        "0",
                        "1",
                        "1"});
            table1.AddRow(new string[] {
                        "29",
                        "Test FCM 9",
                        "Description 9",
                        "Bulk_Reassign_FCM09",
                        "0",
                        "2012-09-13 13:25:28.000",
                        "16ac58fb-4ea4-4482-ac3d-000d607af67c",
                        "9D24AE1A-6645-45FC-9D50-8FC70BABEB89",
                        "2012-09-19 00:00:00.000",
                        "2",
                        "NULL",
                        "NULL",
                        "3",
                        "2",
                        "2012-12-25 00:00:00.000",
                        "MultiHazardRiskAssessmentFurtherControlMeasureTask",
                        "3734a8b7-8868-4fd3-a031-7f0bff85b723",
                        "0",
                        "1",
                        "1"});
#line 9
 testRunner.And("I have the following tasks:", ((string)(null)), table1, "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Reassign several further action tasks to a user")]
        public virtual void ReassignSeveralFurtherActionTasksToAUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Reassign several further action tasks to a user", ((string[])(null)));
#line 21
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 22
 testRunner.Given("I am on the risk assessment index page for company \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 23
 testRunner.And("I have clicked on the edit risk assessment link for id \'39\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.And("I press \'controlmeasures\' link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And("I press \'init-bulk-reassign-tasks\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And("I tick task \'Test FCM 4\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("I tick task \'Test FCM 5\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And("I tick task \'Test FCM 6\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And("I select \'Kim Howard\' with id \'a433e9b2-84f6-4ad7-a89c-050e914dff01\' to reassign " +
                    "the tasks to", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.When("I press \'update-bulk-reassign-tasks\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
 testRunner.Then("task \'Test FCM 4\' is assigned to \'Kim Howard\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 32
 testRunner.Then("task \'Test FCM 5\' is assigned to \'Kim Howard\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 33
 testRunner.Then("task \'Test FCM 6\' is assigned to \'Kim Howard\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Reassign several further action tasks to user and cancel")]
        public virtual void ReassignSeveralFurtherActionTasksToUserAndCancel()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Reassign several further action tasks to user and cancel", ((string[])(null)));
#line 35
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 36
 testRunner.Given("I am on the risk assessment index page for company \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 37
 testRunner.And("I have clicked on the edit risk assessment link for id \'39\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.And("I press \'controlmeasures\' link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("I press \'init-bulk-reassign-tasks\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("I tick task \'Test FCM 4\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.And("I tick task \'Test FCM 5\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("I tick task \'Test FCM 6\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.And("I select \'Kim Howard\' with id \'a433e9b2-84f6-4ad7-a89c-050e914dff01\' to reassign " +
                    "the tasks to", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.When("I press \'cancel-bulk-reassign-tasks\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
 testRunner.Then("task \'Test FCM 4\' is assigned to \'Glen Ross\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 46
 testRunner.Then("task \'Test FCM 5\' is assigned to \'Glen Ross\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 47
 testRunner.Then("task \'Test FCM 6\' is assigned to \'Glen Ross\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Can only reassign several further action tasks to a user if that task is outstand" +
            "ing")]
        public virtual void CanOnlyReassignSeveralFurtherActionTasksToAUserIfThatTaskIsOutstanding()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Can only reassign several further action tasks to a user if that task is outstand" +
                    "ing", ((string[])(null)));
#line 49
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 50
 testRunner.Given("I am on the risk assessment index page for company \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 51
 testRunner.And("I have clicked on the edit risk assessment link for id \'39\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.And("I press \'controlmeasures\' link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
 testRunner.And("I wait for \'1000\' miliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.When("I press \'init-bulk-reassign-tasks\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 55
 testRunner.Then("task \'Test FCM 1\' has a checkbox \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 56
 testRunner.Then("task \'Test FCM 2\' has a checkbox \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 57
 testRunner.Then("task \'Test FCM 3\' has a checkbox \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 58
 testRunner.Then("task \'Test FCM 4\' has a checkbox \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 59
 testRunner.Then("task \'Test FCM 5\' has a checkbox \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 60
 testRunner.Then("task \'Test FCM 6\' has a checkbox \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 61
 testRunner.Then("task \'Test FCM 7\' has a checkbox \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 62
 testRunner.Then("task \'Test FCM 8\' has a checkbox \'false\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 63
 testRunner.Then("task \'Test FCM 9\' has a checkbox \'false\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Reassign several further action tasks to non-user and continue")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void ReassignSeveralFurtherActionTasksToNon_UserAndContinue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Reassign several further action tasks to non-user and continue", new string[] {
                        "ignore"});
#line 67
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 68
 testRunner.Given("I am on the risk assessment index page for company \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 69
 testRunner.And("I have clicked on the edit risk assessment link for id \'39\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.And("I press \'controlmeasures\' link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.And("I press \'init-bulk-reassign-tasks\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
 testRunner.And("I tick task \'Test FCM 4\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.And("I tick task \'Test FCM 5\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.And("I tick task \'Test FCM 6\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.And("I select \'Barry Scott\' with id \'086838FC-76C0-4BF7-AFD7-9B0D53372D7B\' to reassign" +
                    " the tasks to", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
 testRunner.Then("a popup warning me that Barry is not a user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 77
 testRunner.When("I press \'update-bulk-reassign-tasks\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
 testRunner.Then("task \'Test FCM 4\' is assigned to \'Barry Scott\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 79
 testRunner.Then("task \'Test FCM 5\' is assigned to \'Barry Scott\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 80
 testRunner.Then("task \'Test FCM 6\' is assigned to \'Barry Scott\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
