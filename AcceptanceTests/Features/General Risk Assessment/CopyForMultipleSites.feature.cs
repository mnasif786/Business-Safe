// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.225
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BusinessSafe.AcceptanceTests.Features.GeneralRiskAssessment
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CopyForMultipleSites")]
    public partial class CopyForMultipleSitesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CopyForMultipleSites.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CopyForMultipleSites", "In order to avoid silly mistakes\r\nAs a math idiot\r\nI want to be told the sum of t" +
                    "wo numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Copy to multiple sites")]
        [NUnit.Framework.CategoryAttribute("Acceptance")]
        public virtual void CopyToMultipleSites()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Copy to multiple sites", new string[] {
                        "Acceptance"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I have logged in as company with id \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.And("I am on the add general risk assessment index page for company \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And("I click on the copy button for risk assessment with id \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And("I wait for \'1000\' miliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And("I press \'copyMultipleSitesRiskAssessmentLink\' link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And("I wait for \'1000\' miliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And("I have entered \'Multiple Copy 1\' into the \'Title\' field of the \'formCopyMultipleS" +
                    "itesRiskAssessment\' form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.And("I check site with id \'378\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.And("I check site with id \'379\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.And("I check site with id \'382\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.When("I click confirm multiple copy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
 testRunner.And("I wait for \'1000\' miliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Reference",
                        "Title",
                        "Site",
                        "Assigned To",
                        "Status",
                        "Completion Due Date"});
            table1.AddRow(new string[] {
                        "",
                        "Multiple Copy 1",
                        "Aberdeen",
                        "",
                        "Draft",
                        ""});
            table1.AddRow(new string[] {
                        "",
                        "Multiple Copy 1",
                        "Barnsley",
                        "",
                        "Draft",
                        ""});
            table1.AddRow(new string[] {
                        "",
                        "Multiple Copy 1",
                        "Edinburgh",
                        "",
                        "Draft",
                        ""});
            table1.AddRow(new string[] {
                        "CFGRA",
                        "Core Functionality Risk Assessment",
                        "Aberdeen",
                        "Russell Williams",
                        "Live",
                        "01/06/2012"});
            table1.AddRow(new string[] {
                        "TRA01",
                        "Test Risk Assessment 1",
                        "Aberdeen",
                        "Russell Williams",
                        "Live",
                        "01/06/2012"});
            table1.AddRow(new string[] {
                        "TRA02",
                        "Test Risk Assessment 2",
                        "Aberdeen",
                        "Russell Williams",
                        "Live",
                        "01/06/2012"});
            table1.AddRow(new string[] {
                        "GRA01",
                        "General Risk Assessment 1",
                        "Aberdeen",
                        "John Conner",
                        "Live",
                        "08/08/2012"});
            table1.AddRow(new string[] {
                        "GRA02",
                        "General Risk Assessment 2",
                        "Aberdeen",
                        "John Conner",
                        "Live",
                        "08/08/2012"});
            table1.AddRow(new string[] {
                        "Acceptance Test Risk Assessment",
                        "Acceptance Test Risk Assessment",
                        "Aberdeen",
                        "Barry Scott",
                        "Live",
                        "30/08/2012"});
#line 20
 testRunner.Then("the risk assessment table should contain the following data:", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
