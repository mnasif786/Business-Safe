// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.225
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BusinessSafe.AcceptanceTests.Features.GeneralRiskAssessment.Archive
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("General Risk Assessment Archive View Index")]
    public partial class GeneralRiskAssessmentArchiveViewIndexFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ViewIndex.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "General Risk Assessment Archive View Index", "In order to check past general risk assessments\r\nAs a business safe online user\r\n" +
                    "I want to be able to view archived general risk assessments", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("I have logged in as company with id \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When Viewing the General Risk Assessment Index Page Can View Table of Archived GR" +
            "As")]
        [NUnit.Framework.CategoryAttribute("requiresArchivedGeneralRiskAssessments")]
        [NUnit.Framework.CategoryAttribute("Acceptance")]
        [NUnit.Framework.CategoryAttribute("finetune")]
        public virtual void WhenViewingTheGeneralRiskAssessmentIndexPageCanViewTableOfArchivedGRAs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When Viewing the General Risk Assessment Index Page Can View Table of Archived GR" +
                    "As", new string[] {
                        "requiresArchivedGeneralRiskAssessments",
                        "Acceptance",
                        "finetune"});
#line 12
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 13
 testRunner.Given("I am on the risk assessment index page for company \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
 testRunner.Then("the element with id \'ShowArchivedLink\' has visibility of \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 15
 testRunner.When("I press link with ID \'ShowArchivedLink\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Reference",
                        "Title",
                        "Site",
                        "Assigned To",
                        "Status",
                        "Completion Due Date"});
            table1.AddRow(new string[] {
                        "Test Archived RA 01",
                        "Test Archived RA 01",
                        "Aberdeen",
                        "Kim Howard",
                        "Archived",
                        "23/06/2016"});
            table1.AddRow(new string[] {
                        "Test Archived RA 02",
                        "Test Archived RA 02",
                        "Aberdeen",
                        "Kim Howard",
                        "Archived",
                        "23/06/2016"});
            table1.AddRow(new string[] {
                        "Test Archived RA 03",
                        "Test Archived RA 03",
                        "Aberdeen",
                        "Kim Howard",
                        "Archived",
                        "23/06/2016"});
            table1.AddRow(new string[] {
                        "Test Archived RA 04",
                        "Test Archived RA 04",
                        "Aberdeen",
                        "Kim Howard",
                        "Archived",
                        "23/06/2016"});
            table1.AddRow(new string[] {
                        "Test Archived RA 05",
                        "Test Archived RA 05",
                        "Aberdeen",
                        "Kim Howard",
                        "Archived",
                        "23/06/2016"});
#line 16
 testRunner.Then("the risk assessment table should contain the following data:", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
