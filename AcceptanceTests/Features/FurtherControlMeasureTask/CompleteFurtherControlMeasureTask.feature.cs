// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.17929
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BusinessSafe.AcceptanceTests.Features.FurtherControlMeasureTask
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CompleteFurtherControlMeasureTask")]
    public partial class CompleteFurtherControlMeasureTaskFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CompleteFurtherControlMeasureTask.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CompleteFurtherControlMeasureTask", "As A BSO User with Recuring Further Control Measure Task assigned\r\nWhen I complet" +
                    "e a RFCM task\r\nThe next task should be auto generated and displayed on my task l" +
                    "ist.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("I have logged in as company with id \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "MultiHazardRiskAssessmentHazardId",
                        "Title",
                        "Description",
                        "Reference",
                        "Deleted",
                        "CreatedOn",
                        "CreatedBy",
                        "TaskAssignedToId",
                        "TaskCompletionDueDate",
                        "TaskStatusId",
                        "TaskCompletedDate",
                        "TaskCompletedComments",
                        "TaskCategoryId",
                        "TaskReoccurringTypeId",
                        "TaskReoccurringEndDate",
                        "Discriminator",
                        "HazardousSubstanceRiskAssessmentId",
                        "TaskGuid",
                        "SendTaskNotification",
                        "SendTaskCompletedNotification",
                        "SendTaskOverdueNotification"});
            table1.AddRow(new string[] {
                        "29",
                        "Test FCM 1",
                        "Description 1",
                        "RecurFCM01",
                        "0",
                        "2012-09-13 13:25:28.000",
                        "16ac58fb-4ea4-4482-ac3d-000d607af67c",
                        "a433e9b2-84f6-4ad7-a89c-050e914dff01",
                        "2012-09-19 00:00:00.000",
                        "0",
                        "NULL",
                        "NULL",
                        "3",
                        "2",
                        "2012-12-25 00:00:00.000",
                        "MultiHazardRiskAssessmentFurtherControlMeasureTask",
                        "",
                        "f1e25526-07a3-4fe0-8215-d2420f1aea20",
                        "0",
                        "1",
                        "1"});
            table1.AddRow(new string[] {
                        "29",
                        "Test FCM 2",
                        "Description 2",
                        "RecurFCM02",
                        "0",
                        "2012-09-13 13:25:28.000",
                        "16ac58fb-4ea4-4482-ac3d-000d607af67c",
                        "a433e9b2-84f6-4ad7-a89c-050e914dff01",
                        "2012-09-19 00:00:00.000",
                        "0",
                        "NULL",
                        "NULL",
                        "3",
                        "2",
                        "2012-12-25 00:00:00.000",
                        "MultiHazardRiskAssessmentFurtherControlMeasureTask",
                        "",
                        "f29cfd1c-fcaa-45e2-9282-28591ad00511",
                        "0",
                        "1",
                        "1"});
            table1.AddRow(new string[] {
                        "",
                        "HST",
                        "Description 3",
                        "HST",
                        "0",
                        "2012-09-13 13:25:28.000",
                        "16ac58fb-4ea4-4482-ac3d-000d607af67c",
                        "a433e9b2-84f6-4ad7-a89c-050e914dff01",
                        "2012-09-19 00:00:00.000",
                        "0",
                        "NULL",
                        "NULL",
                        "6",
                        "0",
                        "2012-12-25 00:00:00.000",
                        "HazardousSubstanceRiskAssessmentFurtherControlMeasureTask",
                        "42",
                        "a77f52eb-c53a-4f04-b781-8736801a30f8",
                        "0",
                        "1",
                        "1"});
#line 8
 testRunner.And("I have the following tasks:", ((string)(null)), table1, "And ");
#line 13
 testRunner.And("I am viewing tasks for EmployeeId \'A433E9B2-84F6-4AD7-A89C-050E914DFF01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Complete Recurring Further Control Measure Task")]
        [NUnit.Framework.CategoryAttribute("finetune")]
        [NUnit.Framework.CategoryAttribute("usesBackgroundFCMCreation")]
        public virtual void CompleteRecurringFurtherControlMeasureTask()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Complete Recurring Further Control Measure Task", new string[] {
                        "finetune",
                        "usesBackgroundFCMCreation"});
#line 17
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 18
 testRunner.And("Complete task is clicked for \'RecurFCM01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.And("\'TaskComplete\' check box is ticked \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.And("Complete button is enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.When("Complete is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
 testRunner.And("I wait for \'2000\' miliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.Then("FCM Task should have due date of 19/10/2012", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add A Document And Complete A Further Control Measure Task")]
        [NUnit.Framework.CategoryAttribute("usesBackgroundFCMCreation")]
        public virtual void AddADocumentAndCompleteAFurtherControlMeasureTask()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add A Document And Complete A Further Control Measure Task", new string[] {
                        "usesBackgroundFCMCreation"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 27
 testRunner.And("Complete task is clicked for \'RecurFCM02\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And("\'TaskComplete\' check box is ticked \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And("Complete button is enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And("It is simulated that a document has been uploaded when completing fcm task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.When("Complete is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
 testRunner.And("I have waited for the page to reload", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.Then("Document should be saved as a completed document against the fcm task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Complete Hazardous Substance Risk Assessment Further Control Measure Task")]
        [NUnit.Framework.CategoryAttribute("usesBackgroundFCMCreation")]
        [NUnit.Framework.CategoryAttribute("finetune")]
        public virtual void CompleteHazardousSubstanceRiskAssessmentFurtherControlMeasureTask()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Complete Hazardous Substance Risk Assessment Further Control Measure Task", new string[] {
                        "usesBackgroundFCMCreation",
                        "finetune"});
#line 37
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 38
 testRunner.And("Complete task is clicked for \'HST\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("\'TaskComplete\' check box is ticked \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("Complete button is enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.When("Complete is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
 testRunner.Then("the task \'HST\' for company \'55881\' should be completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
