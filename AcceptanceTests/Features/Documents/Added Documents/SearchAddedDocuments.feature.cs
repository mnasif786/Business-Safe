// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BusinessSafe.AcceptanceTests.Features.Documents.AddedDocuments
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("SearchAddedDocuments")]
    public partial class SearchAddedDocumentsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SearchAddedDocuments.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "SearchAddedDocuments", "In order to find documents\r\nAs a user\r\nI want to be adle to search documents", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("I have logged in as company with id \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("SearchWithoutFilter")]
        [NUnit.Framework.CategoryAttribute("Acceptance")]
        public virtual void SearchWithoutFilter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SearchWithoutFilter", new string[] {
                        "Acceptance"});
#line 10
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 11
 testRunner.Given("I am on the added documents page for company \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.When("I press \'Search\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table1.AddRow(new string[] {
                        "FCM Document 03"});
            table1.AddRow(new string[] {
                        "FCM Document 02"});
            table1.AddRow(new string[] {
                        "FCM Document 01"});
            table1.AddRow(new string[] {
                        "GRA Document 05"});
            table1.AddRow(new string[] {
                        "GRA Document 04"});
            table1.AddRow(new string[] {
                        "GRA Document 03"});
            table1.AddRow(new string[] {
                        "GRA Document 02"});
            table1.AddRow(new string[] {
                        "Added Document 01"});
            table1.AddRow(new string[] {
                        "GRA Document 01"});
#line 13
 testRunner.Then("the added document results table should contain the following data:", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("SearchOnDocumentType")]
        [NUnit.Framework.CategoryAttribute("Acceptance")]
        public virtual void SearchOnDocumentType()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SearchOnDocumentType", new string[] {
                        "Acceptance"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 27
 testRunner.Given("I am on the added documents page for company \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
 testRunner.And("I have entered \'GRA Document\' into the \'DocumentType\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And("I have entered \'1\' into the \'DocumentTypeId\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.When("I press \'Search\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table2.AddRow(new string[] {
                        "FCM Document 03"});
            table2.AddRow(new string[] {
                        "FCM Document 02"});
            table2.AddRow(new string[] {
                        "FCM Document 01"});
            table2.AddRow(new string[] {
                        "Added Document 01"});
            table2.AddRow(new string[] {
                        "GRA Document 01"});
#line 31
 testRunner.Then("the added document results table should contain the following data:", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("SearchOnTitle")]
        [NUnit.Framework.CategoryAttribute("Acceptance")]
        public virtual void SearchOnTitle()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SearchOnTitle", new string[] {
                        "Acceptance"});
#line 40
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 41
 testRunner.Given("I am on the added documents page for company \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
 testRunner.And("I have entered \'Document 01\' into the \'Title\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.And("I press \'Search\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table3.AddRow(new string[] {
                        "FCM Document 01"});
            table3.AddRow(new string[] {
                        "Added Document 01"});
            table3.AddRow(new string[] {
                        "GRA Document 01"});
#line 44
 testRunner.Then("the added document results table should contain the following data:", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("SearchOnDocumentTypeAndTitle")]
        [NUnit.Framework.CategoryAttribute("Acceptance")]
        public virtual void SearchOnDocumentTypeAndTitle()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SearchOnDocumentTypeAndTitle", new string[] {
                        "Acceptance"});
#line 51
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 52
 testRunner.Given("I am on the added documents page for company \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 53
 testRunner.And("I have entered \'GRA Document\' into the \'DocumentType\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.And("I have entered \'1\' into the \'DocumentTypeId\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.And("I have entered \'Document 02\' into the \'Title\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.When("I press \'Search\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table4.AddRow(new string[] {
                        "FCM Document 02"});
#line 57
 testRunner.Then("the added document results table should contain the following data:", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("SortOnDateUploadedAscending")]
        [NUnit.Framework.CategoryAttribute("Acceptance")]
        public virtual void SortOnDateUploadedAscending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SortOnDateUploadedAscending", new string[] {
                        "Acceptance"});
#line 63
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 64
 testRunner.Given("I am on the added documents page for company \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 65
 testRunner.When("I press link with Text \'Date Uploaded\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table5.AddRow(new string[] {
                        "GRA Document 01"});
            table5.AddRow(new string[] {
                        "Added Document 01"});
            table5.AddRow(new string[] {
                        "GRA Document 02"});
            table5.AddRow(new string[] {
                        "GRA Document 03"});
            table5.AddRow(new string[] {
                        "GRA Document 04"});
            table5.AddRow(new string[] {
                        "GRA Document 05"});
            table5.AddRow(new string[] {
                        "FCM Document 01"});
            table5.AddRow(new string[] {
                        "FCM Document 02"});
            table5.AddRow(new string[] {
                        "FCM Document 03"});
#line 66
 testRunner.Then("the added document results table should contain the following data:", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("SortOnTitleAscending")]
        [NUnit.Framework.CategoryAttribute("Acceptance")]
        public virtual void SortOnTitleAscending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SortOnTitleAscending", new string[] {
                        "Acceptance"});
#line 79
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 80
 testRunner.Given("I am on the added documents page for company \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 81
 testRunner.When("I press link with Text \'Title\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table6.AddRow(new string[] {
                        "Added Document 01"});
            table6.AddRow(new string[] {
                        "FCM Document 01"});
            table6.AddRow(new string[] {
                        "FCM Document 02"});
            table6.AddRow(new string[] {
                        "FCM Document 03"});
            table6.AddRow(new string[] {
                        "GRA Document 01"});
            table6.AddRow(new string[] {
                        "GRA Document 02"});
            table6.AddRow(new string[] {
                        "GRA Document 03"});
            table6.AddRow(new string[] {
                        "GRA Document 04"});
            table6.AddRow(new string[] {
                        "GRA Document 05"});
#line 82
 testRunner.Then("the added document results table should contain the following data:", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("SortOnTitleDescending")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("Acceptance")]
        public virtual void SortOnTitleDescending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SortOnTitleDescending", new string[] {
                        "ignore",
                        "Acceptance"});
#line 97
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 98
 testRunner.Given("I am on the added documents page for company \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 99
 testRunner.When("I double click link with text \'Title\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table7.AddRow(new string[] {
                        "GRA Document 05"});
            table7.AddRow(new string[] {
                        "GRA Document 04"});
            table7.AddRow(new string[] {
                        "GRA Document 03"});
            table7.AddRow(new string[] {
                        "GRA Document 02"});
            table7.AddRow(new string[] {
                        "GRA Document 01"});
            table7.AddRow(new string[] {
                        "FCM Document 03"});
            table7.AddRow(new string[] {
                        "FCM Document 02"});
            table7.AddRow(new string[] {
                        "FCM Document 01"});
            table7.AddRow(new string[] {
                        "Added Document 01"});
#line 100
 testRunner.Then("the added document results table should contain the following data:", ((string)(null)), table7, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
