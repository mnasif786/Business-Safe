// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18408
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BusinessSafe.AcceptanceTests.Features.CoreFunctionality
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ResponsibilityCoreFunctionality")]
    public partial class ResponsibilityCoreFunctionalityFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ResponsibilityCoreFunctionality.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ResponsibilityCoreFunctionality", "In order to use the Responsibility functionality\r\nAs BSO User\r\nI want the core BS" +
                    "O Functionality to work", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create responsibility and related task")]
        [NUnit.Framework.CategoryAttribute("core_functionality")]
        [NUnit.Framework.CategoryAttribute("Acceptance")]
        public virtual void CreateResponsibilityAndRelatedTask()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create responsibility and related task", new string[] {
                        "core_functionality",
                        "Acceptance"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("I have logged in as company with id \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.And("I am on page \'1\' of the Responsibility Index page for companyId \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And("I press \'add-responsibility-link\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And("I press \'add-bespoke-responsibility-link\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And("I have entered \'Fire Safety\' into the \'Category\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And("I have entered \'1\' into the \'CategoryId\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.And("I have entered \'Test Responsibility 1\' into the \'Title\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.And("I have entered \'Test Responsibility 1 Descritpion\' into the \'Description\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.And("I have entered \'Main Site\' into the \'Site\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("I have entered \'371\' into the \'SiteId\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.And("I have entered \'Compliance\' into the \'Reason\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.And("I have entered \'1\' into the \'ReasonId\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.And("I have entered \'Weekly\' into the \'Frequency\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.And("I have entered \'1\' into the \'FrequencyId\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.When("I press \'createResponsibility\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.And("I wait for \'2000\' miliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.Then("the element with id \'dialogAddEditResponsibilityTask\' has visibility of \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 26
 testRunner.Given("on form \'CreateResponsibilityTaskForm\' I have entered \'10/06/2050\' into the \'Comp" +
                    "letionDueDate\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 27
 testRunner.And("on form \'CreateResponsibilityTaskForm\' I have entered \'Main Site\' into the \'Respo" +
                    "nsibilityTaskSite\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And("on form \'CreateResponsibilityTaskForm\' I have entered \'371\' into the \'Responsibil" +
                    "ityTaskSiteId\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And("on form \'CreateResponsibilityTaskForm\' I have entered \'Kim Howard ( Business Anal" +
                    "yst )\' into the \'AssignedTo\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And("on form \'CreateResponsibilityTaskForm\' I have entered \'A433E9B2-84F6-4AD7-A89C-05" +
                    "0E914DFF01\' into the \'AssignedToId\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.When("I press \'saveResponsibilityTaskButton\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
 testRunner.And("I wait for \'5000\' miliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.Then("the element with id \'dialogAddEditResponsibilityTask\' has visibility of \'false\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Description",
                        "Assigned To",
                        "Site",
                        "Created",
                        "Due Date",
                        "Status"});
            table1.AddRow(new string[] {
                        "Test Responsibility 1",
                        "Test Responsibility 1 Descritpion",
                        "Kim Howard",
                        "Main Site",
                        "DateTime.Now",
                        "10/06/2050",
                        "Outstanding"});
#line 34
 testRunner.And("responsibility task table should contain the following data:", ((string)(null)), table1, "And ");
#line 37
 testRunner.Given("I wait for \'2000\' miliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 38
 testRunner.And("I press \'saveResponsibility\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("I am on page \'2\' of the Responsibility Index page for companyId \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("I wait for \'5000\' miliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.Then("A Responsibility has been created with title \'Test Responsibility 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View responsibility")]
        [NUnit.Framework.CategoryAttribute("core_functionality")]
        [NUnit.Framework.CategoryAttribute("NeedsResponsibilityToViewEditDelete")]
        public virtual void ViewResponsibility()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View responsibility", new string[] {
                        "core_functionality",
                        "NeedsResponsibilityToViewEditDelete"});
#line 48
this.ScenarioSetup(scenarioInfo);
#line 49
 testRunner.Given("I have logged in as company with id \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 50
 testRunner.And("I am on page \'1\' of the Responsibility Index page for companyId \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.And("I click to view the first responsibility", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.Then("I am redirected to the url \'http://businesssafe.dev-peninsula-online.com/Responsi" +
                    "bilities/Responsibility/View?responsibilityId=-1&companyId=55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Delete responsibility")]
        [NUnit.Framework.CategoryAttribute("core_functionality")]
        [NUnit.Framework.CategoryAttribute("NeedsResponsibilityToViewEditDelete")]
        public virtual void DeleteResponsibility()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Delete responsibility", new string[] {
                        "core_functionality",
                        "NeedsResponsibilityToViewEditDelete"});
#line 56
this.ScenarioSetup(scenarioInfo);
#line 57
 testRunner.Given("I have logged in as company with id \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 58
 testRunner.And("I am on page \'1\' of the Responsibility Index page for companyId \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.And("I click to delete the first responsibility", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And("I click confirm", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.And("I wait for \'5000\' miliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
 testRunner.Then("first row does not have title \'Responsibility For Testing\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit responsibility")]
        [NUnit.Framework.CategoryAttribute("core_functionality")]
        [NUnit.Framework.CategoryAttribute("NeedsResponsibilityToViewEditDelete")]
        public virtual void EditResponsibility()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit responsibility", new string[] {
                        "core_functionality",
                        "NeedsResponsibilityToViewEditDelete"});
#line 66
this.ScenarioSetup(scenarioInfo);
#line 67
 testRunner.Given("I have logged in as company with id \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 68
 testRunner.And("I am on page \'1\' of the Responsibility Index page for companyId \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.And("I click to edit the first responsibility", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.And("I have entered \'Edited Responsibility\' into the \'Title\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.And("I have entered \'Edited Responsibility\' into the \'Description\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
 testRunner.And("I press \'saveResponsibility\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.And("I am on page \'1\' of the Responsibility Index page for companyId \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Category",
                        "Title",
                        "Description",
                        "Site",
                        "Reason",
                        "Responsibility Owner",
                        "Status",
                        "Created Date",
                        "Frequency",
                        "Completion Due Date"});
            table2.AddRow(new string[] {
                        "Fire Safety",
                        "Edited Responsibility",
                        "Edited Responsibility",
                        "Main Site",
                        "Compliance",
                        "Kim Howard",
                        "",
                        "DateTime.Now",
                        "Weekly",
                        ""});
#line 74
 testRunner.Then("The first record in the responsibility table should be:", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Complete A Responsibility Task")]
        [NUnit.Framework.CategoryAttribute("core_functionality")]
        [NUnit.Framework.CategoryAttribute("NeedsResponsibilityTasksToComplete")]
        public virtual void CompleteAResponsibilityTask()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Complete A Responsibility Task", new string[] {
                        "core_functionality",
                        "NeedsResponsibilityTasksToComplete"});
#line 80
this.ScenarioSetup(scenarioInfo);
#line 81
 testRunner.Given("I have logged in as company with id \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 82
 testRunner.And("Complete task is clicked for \'NonRecResp01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
 testRunner.And("\'TaskComplete\' check box is ticked \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.And("Complete button is enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
 testRunner.And("I wait for \'100\' miliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
 testRunner.When("Complete is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
 testRunner.And("I wait for \'5000\' miliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
 testRunner.Then("the task \'NonRecResp01\' for company \'55881\' should be completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Reassign A Responsibility Task")]
        [NUnit.Framework.CategoryAttribute("core_functionality")]
        [NUnit.Framework.CategoryAttribute("NeedsResponsibilityTasksToComplete")]
        public virtual void ReassignAResponsibilityTask()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Reassign A Responsibility Task", new string[] {
                        "core_functionality",
                        "NeedsResponsibilityTasksToComplete"});
#line 92
this.ScenarioSetup(scenarioInfo);
#line 93
 testRunner.Given("I have logged in as company with id \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 94
 testRunner.And("Reassign task is clicked for \'RecResp01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
 testRunner.And("on form \'FurtherActionTask\' I have entered \'Gary Green ( Business Analyst )\' into" +
                    " the \'ReassignTaskTo\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.And("on form \'FurtherActionTask\' I have entered \'4d91b7e6-5e25-4620-bfab-d5d4b598cbf7\'" +
                    " into the \'ReassignTaskToId\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
 testRunner.When("I press \'FurtherActionTaskSaveButton\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 98
 testRunner.And("I wait for \'5000\' miliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
 testRunner.And("I have entered \'Gary Green ( Business Analyst )\' into the \'Employee\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 100
 testRunner.And("I have entered \'4d91b7e6-5e25-4620-bfab-d5d4b598cbf7\' into the \'EmployeeId\' field" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
 testRunner.And("I press \'ResponsibilityTaskCategoryGoToResponsibilityTasks\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
 testRunner.Then("the task \'RecResp01\' for company \'55881\' should be assigned to \'4d91b7e6-5e25-462" +
                    "0-bfab-d5d4b598cbf7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
