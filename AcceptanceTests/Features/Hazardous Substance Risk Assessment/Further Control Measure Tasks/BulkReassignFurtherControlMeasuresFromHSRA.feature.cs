// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.17929
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BusinessSafe.AcceptanceTests.Features.HazardousSubstanceRiskAssessment.FurtherControlMeasureTasks
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Bulk Reassigning Further Action Tasks From HSRA")]
    [NUnit.Framework.CategoryAttribute("BulkReassigningFurtherActionTasks")]
    public partial class BulkReassigningFurtherActionTasksFromHSRAFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "BulkReassignFurtherControlMeasuresFromHSRA.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Bulk Reassigning Further Action Tasks From HSRA", "In order to reassign several further action tasks at a time\r\nAs a business safe o" +
                    "nline user with the correct user access rights\r\nI want to be able to reassign se" +
                    "veral further action tasks to a given user", ProgrammingLanguage.CSharp, new string[] {
                        "BulkReassigningFurtherActionTasks"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line 8
 testRunner.Given("I have logged in as company with id \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "MultiHazardRiskAssessmentHazardId",
                        "Title",
                        "Description",
                        "Reference",
                        "Deleted",
                        "CreatedOn",
                        "CreatedBy",
                        "TaskAssignedToId",
                        "TaskCompletionDueDate",
                        "TaskStatusId",
                        "TaskCompletedDate",
                        "TaskCompletedComments",
                        "TaskCategoryId",
                        "TaskReoccurringTypeId",
                        "TaskReoccurringEndDate",
                        "Discriminator",
                        "HazardousSubstanceRiskAssessmentId",
                        "TaskGuid",
                        "SendTaskNotification",
                        "SendTaskCompletedNotification",
                        "SendTaskOverdueNotification"});
            table1.AddRow(new string[] {
                        "",
                        "Test FCM 1",
                        "Description 1",
                        "Bulk_Reassign_FCM01",
                        "0",
                        "2012-09-13 13:25:28.000",
                        "16ac58fb-4ea4-4482-ac3d-000d607af67c",
                        "9D24AE1A-6645-45FC-9D50-8FC70BABEB89",
                        "2012-09-19 00:00:00.000",
                        "0",
                        "NULL",
                        "NULL",
                        "3",
                        "2",
                        "2012-12-25 00:00:00.000",
                        "MultiHazardRiskAssessmentFurtherControlMeasureTask",
                        "42",
                        "850cb58e-5381-4824-9383-560537fd6ea5",
                        "0",
                        "1",
                        "1"});
            table1.AddRow(new string[] {
                        "",
                        "Test FCM 2",
                        "Description 2",
                        "Bulk_Reassign_FCM02",
                        "0",
                        "2012-09-13 13:25:28.000",
                        "16ac58fb-4ea4-4482-ac3d-000d607af67c",
                        "9D24AE1A-6645-45FC-9D50-8FC70BABEB89",
                        "2012-09-19 00:00:00.000",
                        "0",
                        "NULL",
                        "NULL",
                        "3",
                        "2",
                        "2012-12-25 00:00:00.000",
                        "MultiHazardRiskAssessmentFurtherControlMeasureTask",
                        "42",
                        "342dc960-4165-427b-bb46-17408a23befd",
                        "0",
                        "1",
                        "1"});
            table1.AddRow(new string[] {
                        "",
                        "Test FCM 3",
                        "Description 3",
                        "Bulk_Reassign_FCM03",
                        "0",
                        "2012-09-13 13:25:28.000",
                        "16ac58fb-4ea4-4482-ac3d-000d607af67c",
                        "9D24AE1A-6645-45FC-9D50-8FC70BABEB89",
                        "2012-09-19 00:00:00.000",
                        "0",
                        "NULL",
                        "NULL",
                        "3",
                        "2",
                        "2012-12-25 00:00:00.000",
                        "MultiHazardRiskAssessmentFurtherControlMeasureTask",
                        "42",
                        "9730c1a7-c127-43cc-a680-c5d524c18d8b",
                        "0",
                        "1",
                        "1"});
#line 9
 testRunner.And("I have the following tasks:", ((string)(null)), table1, "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Reassign several further action tasks to a user")]
        public virtual void ReassignSeveralFurtherActionTasksToAUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Reassign several further action tasks to a user", ((string[])(null)));
#line 15
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 16
 testRunner.Given("I am on the hazardous substance risk assessment index page for company \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
 testRunner.And("I have clicked on the edit risk assessment link for id \'42\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("I press \'controlmeasures\' link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.And("I have waited for the page to reload", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.And("I press \'init-bulk-reassign-tasks\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.And("I tick task \'Test FCM 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.And("I tick task \'Test FCM 2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.And("I select \'Kim Howard\' with id \'a433e9b2-84f6-4ad7-a89c-050e914dff01\' to reassign " +
                    "the tasks to", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.When("I press \'update-bulk-reassign-tasks\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
 testRunner.Then("task \'Test FCM 1\' is assigned to \'Kim Howard\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 26
 testRunner.Then("task \'Test FCM 2\' is assigned to \'Kim Howard\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 27
 testRunner.Then("task \'Test FCM 3\' is assigned to \'Glen Ross\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
