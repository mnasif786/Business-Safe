// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.17929
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BusinessSafe.AcceptanceTests.Features.HazardousSubstanceRiskAssessment
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DeleteAndUndelete")]
    public partial class DeleteAndUndeleteFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "DeleteAndUndelete.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DeleteAndUndelete", "I should be able to delete a PRA\r\nAnd then restore it again", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line 6
 testRunner.Given("I have logged in as company with id \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Delete and re-instate a risk assessment")]
        [NUnit.Framework.CategoryAttribute("finetune")]
        public virtual void DeleteAndRe_InstateARiskAssessment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Delete and re-instate a risk assessment", new string[] {
                        "finetune"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 10
 testRunner.Given("I am on the Index for Hazardous Substances RiskAssessments for company \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
 testRunner.When("I click to delete the hazardous substance risk assessment with reference \'HazSub " +
                    "1 RA 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
 testRunner.And("I click confirm button on delete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And("I wait for \'2000\' miliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Reference",
                        "Title",
                        "Site",
                        "Assigned To",
                        "Status",
                        "Completion Due Date"});
            table1.AddRow(new string[] {
                        "Acceptance Test HSRA",
                        "Acceptance Test Hazardous Substance Risk Assessment",
                        "",
                        "",
                        "Live",
                        "29/10/2012"});
            table1.AddRow(new string[] {
                        "HazSub 1 RA 2",
                        "Test Hazardous Substance 1 RA 2",
                        "",
                        "",
                        "Live",
                        "29/10/2012"});
            table1.AddRow(new string[] {
                        "HazSub 2 RA 1",
                        "Test Hazardous Substance 2 RA 1",
                        "",
                        "",
                        "Live",
                        "29/10/2012"});
            table1.AddRow(new string[] {
                        "Edinburgh Hazardous Substance Risk Assessment",
                        "Edinburgh Hazardous Substance Risk Assessment",
                        "Edinburgh",
                        "",
                        "Live",
                        "29/10/2012"});
#line 14
 testRunner.Then("the risk assessment table should contain the following data:", ((string)(null)), table1, "Then ");
#line 20
 testRunner.When("I press \'showDeletedLink\' link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
 testRunner.And("I wait for \'2000\' miliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Reference",
                        "Title",
                        "Site",
                        "Assigned To",
                        "Status",
                        "Completion Due Date"});
            table2.AddRow(new string[] {
                        "HazSub 1 RA 1",
                        "Test Hazardous Substance 1 RA 1",
                        "Barnsley",
                        "Kim Howard",
                        "Live",
                        "29/10/2012"});
#line 22
 testRunner.Then("the risk assessment table should contain the following data:", ((string)(null)), table2, "Then ");
#line 25
 testRunner.When("I click to reinstate the hazardous substance risk assessment with reference \'HazS" +
                    "ub 1 RA 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
 testRunner.And("I click confirm button on delete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("I wait for \'2000\' miliseconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And("I am on the Index for Hazardous Substances RiskAssessments for company \'55881\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Reference",
                        "Title",
                        "Site",
                        "Assigned To",
                        "Status",
                        "Completion Due Date"});
            table3.AddRow(new string[] {
                        "Acceptance Test HSRA",
                        "Acceptance Test Hazardous Substance Risk Assessment",
                        "",
                        "",
                        "Live",
                        "29/10/2012"});
            table3.AddRow(new string[] {
                        "HazSub 1 RA 1",
                        "Test Hazardous Substance 1 RA 1",
                        "Barnsley",
                        "Kim Howard",
                        "Live",
                        "29/10/2012"});
            table3.AddRow(new string[] {
                        "HazSub 1 RA 2",
                        "Test Hazardous Substance 1 RA 2",
                        "",
                        "",
                        "Live",
                        "29/10/2012"});
            table3.AddRow(new string[] {
                        "HazSub 2 RA 1",
                        "Test Hazardous Substance 2 RA 1",
                        "",
                        "",
                        "Live",
                        "29/10/2012"});
            table3.AddRow(new string[] {
                        "Edinburgh Hazardous Substance Risk Assessment",
                        "Edinburgh Hazardous Substance Risk Assessment",
                        "Edinburgh",
                        "",
                        "Live",
                        "29/10/2012"});
#line 29
 testRunner.Then("the risk assessment table should contain the following data:", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
