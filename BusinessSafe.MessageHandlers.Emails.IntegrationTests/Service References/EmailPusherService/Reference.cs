//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusinessSafe.MessageHandlers.Emails.IntegrationTests.EmailPusherService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddMessageResponse", Namespace="http://schemas.datacontract.org/2004/07/Peninsula.EmailPusher.DLL.Domain")]
    [System.SerializableAttribute()]
    public partial class AddMessageResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ErrorListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MessageIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ErrorList {
            get {
                return this.ErrorListField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorListField, value) != true)) {
                    this.ErrorListField = value;
                    this.RaisePropertyChanged("ErrorList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((this.MessageIdField.Equals(value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttachmentType", Namespace="http://schemas.datacontract.org/2004/07/Peninsula.EmailPusher.DLL.Domain")]
    [System.SerializableAttribute()]
    public partial class AttachmentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldFileNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewFileName {
            get {
                return this.NewFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NewFileNameField, value) != true)) {
                    this.NewFileNameField = value;
                    this.RaisePropertyChanged("NewFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldFileName {
            get {
                return this.OldFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OldFileNameField, value) != true)) {
                    this.OldFileNameField = value;
                    this.RaisePropertyChanged("OldFileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmailPusherService.IEmailPusherService")]
    public interface IEmailPusherService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailPusherService/AddNewMessageGetAddNewMessageResponse", ReplyAction="http://tempuri.org/IEmailPusherService/AddNewMessageGetAddNewMessageResponseRespo" +
            "nse")]
        BusinessSafe.MessageHandlers.Emails.IntegrationTests.EmailPusherService.AddMessageResponse AddNewMessageGetAddNewMessageResponse(string[] recipients, string[] ccrecipients, string[] attachments, string subject, string body, string sender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailPusherService/AddNewMessageWithAttachmentNameGetAddNewMe" +
            "ssageResponse", ReplyAction="http://tempuri.org/IEmailPusherService/AddNewMessageWithAttachmentNameGetAddNewMe" +
            "ssageResponseResponse")]
        BusinessSafe.MessageHandlers.Emails.IntegrationTests.EmailPusherService.AddMessageResponse AddNewMessageWithAttachmentNameGetAddNewMessageResponse(string[] recipients, string[] ccrecipients, BusinessSafe.MessageHandlers.Emails.IntegrationTests.EmailPusherService.AttachmentType[] attachments, string subject, string body, string sender);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmailPusherServiceChannel : BusinessSafe.MessageHandlers.Emails.IntegrationTests.EmailPusherService.IEmailPusherService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmailPusherServiceClient : System.ServiceModel.ClientBase<BusinessSafe.MessageHandlers.Emails.IntegrationTests.EmailPusherService.IEmailPusherService>, BusinessSafe.MessageHandlers.Emails.IntegrationTests.EmailPusherService.IEmailPusherService {
        
        public EmailPusherServiceClient() {
        }
        
        public EmailPusherServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmailPusherServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailPusherServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailPusherServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BusinessSafe.MessageHandlers.Emails.IntegrationTests.EmailPusherService.AddMessageResponse AddNewMessageGetAddNewMessageResponse(string[] recipients, string[] ccrecipients, string[] attachments, string subject, string body, string sender) {
            return base.Channel.AddNewMessageGetAddNewMessageResponse(recipients, ccrecipients, attachments, subject, body, sender);
        }
        
        public BusinessSafe.MessageHandlers.Emails.IntegrationTests.EmailPusherService.AddMessageResponse AddNewMessageWithAttachmentNameGetAddNewMessageResponse(string[] recipients, string[] ccrecipients, BusinessSafe.MessageHandlers.Emails.IntegrationTests.EmailPusherService.AttachmentType[] attachments, string subject, string body, string sender) {
            return base.Channel.AddNewMessageWithAttachmentNameGetAddNewMessageResponse(recipients, ccrecipients, attachments, subject, body, sender);
        }
    }
}
